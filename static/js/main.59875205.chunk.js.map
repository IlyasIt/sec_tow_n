{"version":3,"sources":["panels/Firebase.config.js","panels/Loader.js","panels/Intro.js","panels/Home.js","panels/Play.js","panels/Settings.js","panels/Rating.js","panels/Info.js","panels/Warning.js","App.js","index.js","img/arrow.svg","img/AvatarApp.png"],"names":["require","config","firebaseConfig","apiKey","process","ef34wdfwr34wefwewneiuerr","authDomain","eriojge9rgjh472234nfe","databaseURL","vbrtg45i45ig4o5g45g45g","projectId","storageBucket","dfvh34hg3u84h8347gh3g","messagingSenderId","wfeefj34uhf3uf3wefwe","appId","sdfuhy38f3478fhn8f73f","measurementId","wefh27382738f28nfu23f23mf23f","firebase","Firebase","initializeApp","Loader","props","useEffect","timer","setInterval","setTimeout","bridge","send","then","data","keys","value","goToHome","clearInterval","goToIntro","catch","e","id","separator","className","Intro","useState","slide","setSlide","style","overflow","class","onChange","slideIndex","slideWidth","bullets","fontSize","src","Arrow","mode","onClick","size","cursor","toString","firestore","collection","doc","set","score","err","console","log","Home","animation","undefined","position","goToPage","changeLevel","chooseLevel","before","width","height","color","fontFamily","data-to","Play","setStateResponseOk","statusButton","setStatusButton","error","setError","leftCity","setStateLeftCity","rightCity","setStateRightCity","count","setStateCount","setStateTimer","setResponseCheck","settimerRes","leftCityDictance","setStateleftCityDictance","rightCityDictance","setStaterightCityDictance","leftCityResponse","setStateleftCityResponse","rightCityResponse","setStaterightCityResponse","setStatestatusBackground","isStartGame","setStateisStartGame","isOverGame","setStateisOverGame","isNextGame","setStateisNextGame","timerId","setStatetimerId","progressId","setStateprogressId","resultId","setStateresultId","result","setStateresult","setStateuserPostRes","geoUser","setStateGeoUser","left","leftButton","right","rightButton","statusRightButton","setStateStatusRightButton","statusLeftButton","setStateStatusLeftButton","checkOnlineState","navigator","onLine","window","addEventListener","startGame","geolocation","lengthArrLeft","Math","floor","random","length","lengthArrRight","geoLeft0","geoRight0","countDown","geoLeft","latLeft","longLeft","latLeft0","longLeft0","geoRight","latRight","longRight","latRight0","longRight0","getDistanceFromLatLonInKmRight","lat4","lon4","lat8","lon8","dLat1","deg2rad","dLon1","a1","sin","cos","atan2","sqrt","deg1","PI","getDistanceFromLatLonInKmLeft","lat1","lon1","lat2","lon2","dLat","dLon","a","deg","split","toFixed","i","t","timerIdcountDown","setStateStatusNextButton","statusNextButton","transparent","history","go","title","pointerEvents","vn845gh845gi4ufe782dermj394","get","first_name","last_name","photo","photo_200","link","userResponseLeft","userResponseRight","Settings","pos","setPos","errorSearch","setErrorSearch","errorSearchValue","setErrorSearchValue","lengthSearch","setStateLengthSearch","setStateCheckClick","descriptionAdress0","setStateDescriptionAdress0","nameAdress0","setStateNameAdress0","position0","setStatePosition0","descriptionAdress1","setStateDescriptionAdress1","nameAdress1","setStateNameAdress1","position1","setStatePosition1","descriptionAdress2","setStateDescriptionAdress2","nameAdress2","setStateNameAdress2","position2","setStatePosition2","description0","setStateDescription0","description1","setStateDescription1","chooseGeo0","setStateChooseGeo0","chooseGeo1","setStateChooseGeo1","setStateChooseDescription","setStateChooseName","valueInput","setValueInput","isNaN","parseInt","marginTop","header","defaultValue","test","document","getElementById","RegExp","api","fetch","res","json","response","GeoObjectCollection","featureMember","GeoObject","name","Point","reverse","description","searchChange","placeholder","multiline","savePositionGlobal","lat","long","animationButIcon","offAnimationGlobal","textButton","Rating","setUserName","setPhoto","setScore","userName0","setUserName0","photo0","setPhoto0","score0","setScore0","link0","setLink0","userName1","setUserName1","photo1","setPhoto1","score1","setScore1","link1","setLink1","userName2","setUserName2","photo2","setPhoto2","score2","setScore2","link2","setLink2","userName3","setUserName3","photo3","setPhoto3","score3","setScore3","link3","setLink3","userName4","setUserName4","photo4","setPhoto4","score4","setScore4","link4","setLink4","allPlayers","setallPlayers","snapshot","allUsersRating","docs","map","obj","sort","b","replace","alertText","alert","target","href","after","shareResult","snackbar","Info","download","setDownload","setSnackbar","AvatarApp","layout","onClose","fill","back","textAlign","lights","arrAllLeft","arrAllRight","arrGeoLeft","arrGeoRight","arrCountryRight","arrCountryLeft","arrCityLeft","arrCityRight","App","activePanel","setActivePanel","scheme","SetStateScheme","setStatePosition","setStateGeolocation","setStateLeft","setStateRight","setStateChooseLevel","setStateTitle","pushState","panel","push","goBack","closePopout","pop","setAnimationButIcon","setAnimation","setTextButton","goToError","goToLoader","camelCase","needChange","isLight","includes","subscribe","detail","type","geo","popoutStatus","setpopoutStatus","setAlertText","setAlert","isWebView","popout","onSwipeBack","statusAnimation","status","text","platform","actionsLayout","actions","autoclose","action","location","users","open","Warning","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.59875205.chunk.js","sourcesContent":["\r\nimport Firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.ef34wdfwr34wefwewneiuerr,\r\n    authDomain: process.env.eriojge9rgjh472234nfe,\r\n    databaseURL: process.env.vbrtg45i45ig4o5g45g45g,\r\n    // ANTON NE LOMAI + 1 + 1\r\n    projectId: 'towner-d1755',\r\n    // DUNYA NE LOMAI\r\n    storageBucket: process.env.dfvh34hg3u84h8347gh3g,\r\n    messagingSenderId: process.env.wfeefj34uhf3uf3wefwe,\r\n    appId: process.env.sdfuhy38f3478fhn8f73f,\r\n    measurementId: process.env.wefh27382738f28nfu23f23mf23f\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(firebaseConfig);\r\n\r\nexport { firebase };","import React, { useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Panel } from '@vkontakte/vkui/';\r\nimport './Style.css';\r\nimport { firebase } from './Firebase.config.js';\r\n\r\n\r\nconst Loader = props => {\r\n\r\n  \r\n    useEffect(() => {\r\n        \r\n\r\n\r\n        \r\n       let timer = setInterval(() => {\r\n            setTimeout(() => {\r\n\r\n                bridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"hasSeenOnboarding\"] })\r\n                    .then(data => {\r\n                        if (data.keys[0].value === 'true') {\r\n                            props.goToHome()\r\n                            clearInterval(timer)\r\n\r\n                        } else {\r\n                            props.goToIntro()\r\n                            clearInterval(timer)\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                    })\r\n            }, 500);\r\n        }, 1000);\r\n        \r\n        \r\n        \r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <Panel id={props.id} separator={false}>\r\n            <div className=\"stage\">\r\n              \r\n                <div className=\"blockLoaderForPanel\">\r\n                    <div className=\"earthLoaderForPanel\"></div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Div, Gallery, Panel, Button } from '@vkontakte/vkui/';\r\nimport Arrow from '../img/arrow.svg';\r\nimport { firebase } from './Firebase.config.js';\r\nimport './Style.css';\r\n\r\nconst Intro = props => {\r\nconst [slide, setSlide] = useState(0)\r\n    const firstOpenApp = () => {\r\n\r\n        bridge.send(\"VKWebAppGetUserInfo\")\r\n            .then(data => {\r\n\r\n                const id = data.id.toString()\r\n\r\n                firebase.firestore().collection('globalRating').doc(id).set({\r\n                    score: 0,\r\n                })\r\n\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            })\r\n        bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenOnboarding\", \"value\": 'true' });\r\n        bridge.send(\"VKWebAppStorageSet\", { \"key\": \"geo\", \"value\": '' });\r\n        bridge.send(\"VKWebAppStorageSet\", { \"key\": \"pos\", \"value\": '' });\r\n\r\n        props.goToHome()\r\n    }\r\n\r\n    return (\r\n\r\n        <Panel id={props.id} separator={false}>\r\n            <div className=\"stage\" style={{ overflow: 'hidden' }}>\r\n                <ul class=\"circlesIntro\">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n                <Gallery onChange={slideIndex => setSlide(slideIndex)} slideIndex={slide} className='gallery' slideWidth=\"100%\" bullets=\"false\">\r\n\r\n\r\n                    <div className='galleryBlock'>\r\n                        <div className='textIntro' style={{ fontSize: '5vh' }}>Добро пожаловать в интеллектуальную игру под названием Towner!</div>\r\n                        <img className=\"scale\" src={Arrow} />\r\n                        <Div><Button mode='tertiary' onClick={() => setSlide(1)} size=\"xl\" className=\"nextButtonIntro\"><h1>Далее!</h1></Button></Div>\r\n                    </div>\r\n                    <div className='galleryBlock'>\r\n                        <div className='textIntro' style={{ fontSize: '3.5vh' }}>Предлагаем тебе проверить, насколько хорошо ты ориентируешься в географии и связанных с ней понятиях!</div>\r\n                        <img className=\"scale\" src={Arrow} />\r\n                        <Div><Button mode=\"tertiary\" onClick={() => setSlide(2)} size=\"xl\" className=\"nextButtonIntro\"><h1>Понятно!</h1></Button></Div>\r\n                    </div>\r\n                    <div className='galleryBlock'>\r\n                        <div className='textIntro' style={{ fontSize: '3.5vh' }}>Задача проста: сравнить расстояние до двух городов/стран/столиц относительно твоего местоположения и выбрать ближайший!</div>\r\n                        <img className=\"scale\" src={Arrow} />\r\n                        <Div><Button mode=\"tertiary\" onClick={() => setSlide(3)} size=\"xl\" className=\"nextButtonIntro\"><h1>Погнали!</h1></Button></Div>\r\n                    </div>\r\n                    <div className='galleryBlock'>\r\n                        <div className='textIntro' style={{ fontSize: '4vh' }}>У тебя будет выбор между игрой по странам или же городам!</div>\r\n                        <Button style={{ cursor: 'pointer' }} className=\"startButIntro\" mode=\"outline\" size=\"xl\" onClick={() => firstOpenApp()}><div className=\"titleStartBut\" style={{ fontSize: '6vh' }}>Начать!</div></Button>\r\n                    </div>\r\n                </Gallery>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Intro;","import React from 'react';\nimport { Panel, Button } from '@vkontakte/vkui/';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28ErrorOutline from '@vkontakte/icons/dist/28/error_outline';\nimport Icon28GraphOutline from '@vkontakte/icons/dist/28/graph_outline';\nimport './Style.css';\n\nconst Home = (props) => {\n\n\tconst goRating = () => {\n\t\tprops.goToPage('Rating')\n\t}\n\tconst startGame = () => {\n\n\t\tif (props.position === undefined || props.position === '') {\n\n\t\t\tprops.goToPage('Warning')\n\n\t\t} else {\n\n\t\t\tprops.goToPage('Play')\n\n\t\t}\n\t}\n\n\tconst changeLevel = () => {\n\t\tprops.changeLevel()\n\t}\n\n\n\treturn (\n\t\t<Panel id={props.id} separator={false}>\n\t\t\t<div className=\"stage\" style={{ overflow: 'hidden'}}>\n\t\t\t\t{props.animation === true ? (\n\t\t\t\t<>\n\t\t\t\t\t\n\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t<li></li>\n\n\t\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t\t<></>\n\t\t\t\t)}\n\t\t\t\n\t\t\t\t<div className=\"title\">Towner</div>\n\t\t\t\t<Button style={{ cursor: 'pointer' }} className=\"startButton\" mode=\"outline\" size=\"xl\" onClick={() => startGame()}><div className=\"titleStartBut\">Играть!</div></Button>\n\t\t\t\t<Button style={{ cursor: 'pointer' }} className=\"levelButton\" onClick={() => changeLevel()} size='xl' mode='outline'><div className=\"titleNextBut\">{props.chooseLevel}</div></Button>\n\n\t\t\t\t<div className=\"blockButton\">\n\t\t\t\t\t<Button style={{ cursor: 'pointer' }} \n\t\t\t\t\t\tclassName=\"settingsButton\"\n\t\t\t\t\t\tbefore={<Icon28SettingsOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\t\tsize=\"\"\n\t\t\t\t\t\tonClick={() => props.goToPage('Settings')}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button style={{ cursor: 'pointer' }} \n\t\t\t\t\t\tclassName=\"ratingButton\"\n\t\t\t\t\t\tbefore={<Icon28GraphOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\t\tsize=\"\"\n\t\t\t\t\t\tonClick={() => goRating()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p style={{\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\t\tfontFamily: 'Neucha',\n\t\t\t\t\t\t}}></p>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button style={{ cursor: 'pointer'}} \n\t\t\t\t\t\tclassName=\"aboutButton\"\n\t\t\t\t\t\tbefore={<Icon28ErrorOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\t\tdata-to=\"persik\"\n\t\t\t\t\t\tsize=\"\"\n\t\t\t\t\t\tonClick={() => props.goToPage('Info')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p style={{\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\t\tfontFamily: 'Neucha',\n\t\t\t\t\t\t}}></p>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Panel>\n\t)\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, PanelHeaderBack, Button, Progress, Div } from '@vkontakte/vkui/';\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\nimport './Style.css';\nimport { firebase } from './Firebase.config.js';\nimport { functions } from 'firebase';\nrequire('dotenv').config();\n\n\n\nconst Play = (props) => {\n\tconst [animation, setAnimation] = useState(props.animation)\n\tconst [ResponseOk, setStateResponseOk] = useState(false)\n\tconst [statusButton, setStatusButton] = useState('none')\n\tconst [error, setError] = useState(false)\n\tconst [leftCity, setStateLeftCity] = useState(\" \");\n\tconst [rightCity, setStateRightCity] = useState(\" \");\n\tconst [count, setStateCount] = useState(100);\n\tconst [timer, setStateTimer] = useState();\n\tconst [responseCheck, setResponseCheck] = useState(false);\n\tconst [timerRes, settimerRes] = useState(0)\n\tconst [leftCityDictance, setStateleftCityDictance] = useState(\" \");\n\tconst [rightCityDictance, setStaterightCityDictance] = useState(\" \");\n\tconst [leftCityResponse, setStateleftCityResponse] = useState(0);\n\tconst [rightCityResponse, setStaterightCityResponse] = useState(0);\n\tconst [statusBackground, setStatestatusBackground] = useState(\"stage\");\n\tconst [isStartGame, setStateisStartGame] = useState(false)\n\tconst [isOverGame, setStateisOverGame] = useState(false)\n\tconst [isNextGame, setStateisNextGame] = useState(false)\n\tconst [timerId, setStatetimerId] = useState(\"timer\")\n\tconst [progressId, setStateprogressId] = useState(\"progressNone\")\n\tconst [resultId, setStateresultId] = useState(\"result\")\n\tconst [result, setStateresult] = useState()\n\n\tconst [userPostRes, setStateuserPostRes] = useState(false)\n\tconst [geoUser, setStateGeoUser] = useState(<br />);\n\tconst [leftButton, setStateLeftButton] = useState(props.left);\n\tconst [rightButton, setStateRightButton] = useState(props.right);\n\n\tconst [statusRightButton, setStateStatusRightButton] = useState('cityButtonRight')\n\tconst [statusLeftButton, setStateStatusLeftButton] = useState('cityButtonLeft')\n\n\tconst [useEffectActive, setUseEffectActive] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tfunction checkOnlineState() {\n\t\t\tif (navigator.onLine) {\n\n\t\t\t} else {\n\t\t\t\tsetError(true)\n\t\t\t}\n\t\t}\n\t\tcheckOnlineState();\n\t\twindow.addEventListener('online', checkOnlineState);\n\n\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"checkResponse\"] })\n\t\t\t.then(data => {\n\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetError(true)\n\t\t\t})\n\n\t\tsetResponseCheck(false)\n\t\tstartGame()\n\t\tif (isNextGame === false) {\n\t\t\tsetStateisNextGame(true)\n\t\t} else {\n\n\t\t}\n\t}, []);\n\n\n\n\tconst nextGame = () => {\n\t\tsetStateResponseOk(false)\n\n\n\t\tif (isNextGame === false) {\n\n\n\t\t\tsetStateStatusNextButton(false)\n\t\t\tsetStateisNextGame(true)\n\t\t\tstartGame()\n\t\t} else {\n\n\t\t}\n\n\t}\n\n\n\tconst startGame = () => {\n\t\tsetStateResponseOk(false)\n\t\tsetStateCount(100);\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkNextButton\", \"value\": 'false' });\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkResponse\", \"value\": 'false' });\n\t\tsetStateresult('')\n\t\tsetStateStatusLeftButton('cityButtonLeft')\n\t\tsetStateStatusRightButton('cityButtonRight')\n\t\tsetStateTimer()\n\t\tsetStatetimerId(\"timer\")\n\t\tsetStateprogressId(\"progress\")\n\t\tsetStateresultId(\"resultNone\")\n\t\tsetStatestatusBackground(\"stage\")\n\t\tsetStateisOverGame(false)\n\t\tsetStateisStartGame(false)\n\t\tsetStaterightCityDictance();\n\t\tsetStateleftCityDictance();\n\t\tsetStateTimer('Подождите');\n\t\tsetStateGeoUser(props.geolocation)\n\t\tsetStatusButton('none')\n\n\n\t\tconst timerId = setInterval(() => {\n\n\t\t\tconst lengthArrLeft = Math.floor(Math.random() * leftButton.length);\n\t\t\tconst lengthArrRight = Math.floor(Math.random() * rightButton.length);\n\n\t\t\tconst geoLeft = leftButton[lengthArrLeft];\n\t\t\tconst geoLeft0 = (geoLeft[0])[1];\n\n\t\t\tconst geoRight = rightButton[lengthArrRight];\n\t\t\tconst geoRight0 = (geoRight[0])[1];\n\n\t\t\tsetStateRightCity(geoRight0)\n\t\t\tsetStateLeftCity(geoLeft0)\n\n\t\t}, 40);\n\n\t\tsetTimeout(() => { clearInterval(timerId); countDown(); setStateisStartGame(true) }, 1000);\n\n\t}\n\n\tconst countDown = () => {\n\t\tsetStatusButton('inherit')\n\t\tconst lengthArrLeft = Math.floor(Math.random() * leftButton.length);\n\t\tconst lengthArrRight = Math.floor(Math.random() * rightButton.length);\n\n\t\tconst geoLeft = leftButton[lengthArrLeft];\n\t\tconst latLeft = leftButton[lengthArrLeft];\n\t\tconst longLeft = leftButton[lengthArrLeft];\n\t\tconst geoLeft0 = (geoLeft[0])[1];\n\t\tconst latLeft0 = (latLeft[1])[1];\n\t\tconst longLeft0 = (longLeft[2])[1];\n\n\t\tconst geoRight = rightButton[lengthArrRight];\n\t\tconst latRight = rightButton[lengthArrRight];\n\t\tconst longRight = rightButton[lengthArrRight];\n\t\tconst geoRight0 = (geoRight[0])[1];\n\t\tconst latRight0 = (latRight[1])[1];\n\t\tconst longRight0 = (longRight[2])[1];\n\t\tconsole.log(props.position.split(',')[0], props.position.split(',')[1]);\n\t\tsetStateRightCity(geoRight0)\n\t\tsetStateLeftCity(geoLeft0)\n\t\tfunction getDistanceFromLatLonInKmRight(lat4, lon4, lat8, lon8) {\n\t\t\tvar R1 = 6371;\n\t\t\tvar dLat1 = deg2rad(lat8 - lat4);\n\t\t\tvar dLon1 = deg2rad(lon8 - lon4);\n\t\t\tvar a1 =\n\t\t\t\tMath.sin(dLat1 / 2) * Math.sin(dLat1 / 2) +\n\t\t\t\tMath.cos(deg2rad(lat4)) * Math.cos(deg2rad(lat8)) *\n\t\t\t\tMath.sin(dLon1 / 2) * Math.sin(dLon1 / 2)\n\t\t\t\t;\n\t\t\tvar c1 = 2 * Math.atan2(Math.sqrt(a1), Math.sqrt(1 - a1));\n\t\t\tvar d1 = R1 * c1;\n\t\t\treturn d1;\n\t\t}\n\t\tfunction deg2rad(deg1) {\n\t\t\treturn deg1 * (Math.PI / 180)\n\t\t}\n\t\tsetStaterightCityResponse(+getDistanceFromLatLonInKmRight(props.position.split(',')[0], props.position.split(',')[1], latRight0, longRight0).toFixed(0))\n\t\tfunction getDistanceFromLatLonInKmLeft(lat1, lon1, lat2, lon2) {\n\t\t\tvar R = 6371;\n\t\t\tvar dLat = deg2rad(lat2 - lat1);\n\t\t\tvar dLon = deg2rad(lon2 - lon1);\n\t\t\tvar a =\n\t\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n\t\t\t\tMath.sin(dLon / 2) * Math.sin(dLon / 2)\n\t\t\t\t;\n\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\t\tvar d = R * c;\n\t\t\treturn d;\n\t\t}\n\n\t\tfunction deg2rad(deg) {\n\t\t\treturn deg * (Math.PI / 180)\n\t\t}\n\t\tsetStateleftCityResponse(+getDistanceFromLatLonInKmLeft(props.position.split(',')[0], props.position.split(',')[1], latLeft0, longLeft0).toFixed(0))\n\t\tconsole.log(geoLeft0, latLeft0, longLeft0, leftCityResponse, geoRight0, latRight0, longRight0, rightCityResponse);\n\n\t\tlet i = 100\n\t\tlet t = 3\n\t\tlet timerIdcountDown = setInterval(() => {\n\n\t\t\tsetStateTimer(\"Осталось \" + t-- + \" сек\")\n\n\t\t\tsetStateCount(i = i - 25)\n\n\n\t\t\tif (t === -1) {\n\t\t\t\tfunction checkOnlineState() {\n\t\t\t\t\tif (navigator.onLine) {\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcheckOnlineState();\n\t\t\t\tsetStatusButton('none')\n\t\t\t\tsetStateStatusNextButton(true)\n\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\tsetStateresult('Вы не успели!');\n\t\t\t\tsetStateprogressId(\"progressNone\")\n\t\t\t\tsetStateisOverGame(true)\n\t\t\t\tsetStateisNextGame(false)\n\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\tsetStateCount(100);\n\t\t\t\tsetStaterightCityDictance(getDistanceFromLatLonInKmRight(props.position.split(',')[0], props.position.split(',')[1], latRight0, longRight0).toFixed(0) + \" км\");\n\t\t\t\tsetStateleftCityDictance(getDistanceFromLatLonInKmLeft(props.position.split(',')[0], props.position.split(',')[1], latLeft0, longLeft0).toFixed(0) + \" км\");\n\n\n\t\t\t}\n\n\n\n\t\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"checkResponse\"] })\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.keys[0].value === 'true') {\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStateisOverGame(true)\n\t\t\t\t\t\tsetStateisNextGame(false)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tfunction checkOnlineState() {\n\t\t\t\t\t\t\t\tif (navigator.onLine) {\n\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckOnlineState();\n\t\t\t\t\t\t\tsetStatusButton('none')\n\t\t\t\t\t\t\tsetStateStatusNextButton(true)\n\t\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\t\tsetStateresult('Вы не успели!');\n\t\t\t\t\t\t\tsetStateprogressId(\"progressNone\")\n\t\t\t\t\t\t\tsetStateisOverGame(true)\n\t\t\t\t\t\t\tsetStateisNextGame(false)\n\t\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\t\tsetStateCount(100);\n\t\t\t\t\t\t\tsetStaterightCityDictance(getDistanceFromLatLonInKmRight(props.position.split(',')[0], props.position.split(',')[1], latRight0, longRight0).toFixed(0) + \" км\");\n\t\t\t\t\t\t\tsetStateleftCityDictance(getDistanceFromLatLonInKmLeft(props.position.split(',')[0], props.position.split(',')[1], latLeft0, longLeft0).toFixed(0) + \" км\");\n\n\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetError(true)\n\t\t\t\t})\n\n\t\t}, 1000);\n\t}\n\n\n\n\n\n\tconst userResponseLeft = () => {\n\n\n\n\n\t\tif (isOverGame === false) {\n\t\t\tif (isStartGame === true) {\n\t\t\t\tsetStatusButton('none')\n\t\t\t\tsetStateResponseOk(true)\n\n\t\t\t\tif (leftCityResponse < rightCityResponse) {\n\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkResponse\", \"value\": 'true' });\n\t\t\t\t\tsetStateisOverGame(true)\n\t\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\t\tsettimerRes(3000)\n\n\t\t\t\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t\t\t\t.then(data => {\n\n\t\t\t\t\t\t\tconst id = data.id.toString()\n\n\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).get()\n\n\t\t\t\t\t\t\t\t.then((doc) => {\n\n\t\t\t\t\t\t\t\t\tconst score = +doc.data().score\n\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).set({\n\t\t\t\t\t\t\t\t\t\tscore: score + leftCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}).catch(err => {\n\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).set({\n\t\t\t\t\t\t\t\t\t\tscore: leftCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t\t})\n\n\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\n\n\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult('Вы ответили верно!')\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusLeftButton('cityButtonLeftSucces')\n\t\t\t\t\t\tsetStateStatusNextButton(true)\n\n\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkNextButton\", \"value\": 'true' });\n\n\t\t\t\t\t}, 1500);\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t\t\t\t.then(data => {\n\n\t\t\t\t\t\t\tconst id = data.id.toString()\n\n\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).get()\n\n\t\t\t\t\t\t\t\t.then((doc) => {\n\n\t\t\t\t\t\t\t\t\tconst score = +doc.data().score\n\n\t\t\t\t\t\t\t\t\tif (score > leftCityResponse) {\n\t\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).set({\n\t\t\t\t\t\t\t\t\t\t\tscore: score - leftCityResponse,\n\t\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t}).catch(err => {\n\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).set({\n\t\t\t\t\t\t\t\t\t\tscore: leftCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t\t})\n\n\n\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkResponse\", \"value\": 'true' });\n\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\n\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult('Ответ неправильный!')\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusLeftButton('cityButtonLeftError')\n\t\t\t\t\t\tsetStateStatusNextButton(true)\n\n\n\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkNextButton\", \"value\": 'true' });\n\n\t\t\t\t\t}, 1500);\n\n\n\t\t\t\t}\n\n\t\t\t\tsetStateisOverGame(true)\n\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\tsetStatetimerId(\"timerNone\")\n\t\t\t\tsetStateprogressId(\"progressNone\")\n\t\t\t} else {\n\n\t\t\t}\n\t\t} else {\n\n\t\t}\n\n\n\n\t}\n\n\tconst userResponseRight = () => {\n\t\tif (isOverGame === false) {\n\t\t\tif (isStartGame === true) {\n\t\t\t\tsetStatusButton('none')\n\t\t\t\tsetStateResponseOk(true)\n\n\t\t\t\tif (leftCityResponse > rightCityResponse) {\n\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkResponse\", \"value\": 'true' });\n\t\t\t\t\tsetStateisOverGame(true)\n\t\t\t\t\tsettimerRes(3000)\n\t\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t\t\t\t.then(data => {\n\n\t\t\t\t\t\t\tconst id = data.id.toString()\n\n\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).get()\n\n\t\t\t\t\t\t\t\t.then((doc) => {\n\n\t\t\t\t\t\t\t\t\tconst score = +doc.data().score\n\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).set({\n\t\t\t\t\t\t\t\t\t\tscore: score + rightCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).set({\n\t\t\t\t\t\t\t\t\t\tscore: rightCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t\t})\n\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\t\tsetStateresult('Вы ответили верно!')\n\t\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\t\tsetStateStatusRightButton('cityButtonRightSucces')\n\t\t\t\t\t\t\tsetStateStatusNextButton(true)\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkNextButton\", \"value\": 'true' });\n\n\t\t\t\t\t}, 1500);\n\n\t\t\t\t} else {\n\t\t\t\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t\t\t\t.then(data => {\n\n\t\t\t\t\t\t\tconst id = data.id.toString()\n\n\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).get()\n\n\t\t\t\t\t\t\t\t.then((doc) => {\n\n\t\t\t\t\t\t\t\t\tconst score = +doc.data().score\n\n\t\t\t\t\t\t\t\t\tif (score > rightCityResponse) {\n\t\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(id).set({\n\t\t\t\t\t\t\t\t\t\t\tscore: score - rightCityResponse,\n\t\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t}).catch(err => {\n\n\t\t\t\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).set({\n\t\t\t\t\t\t\t\t\t\tscore: leftCityResponse,\n\t\t\t\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t\t\t\t\tlink: `https://vk.com/id${id}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t\t})\n\n\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkResponse\", \"value\": 'true' });\n\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\t\tsetStateresult('Ответ неправильный!')\n\t\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\t\tsetStateStatusRightButton('cityButtonLeftError')\n\t\t\t\t\t\t\tsetStateStatusNextButton(true)\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"checkNextButton\", \"value\": 'true' });\n\n\t\t\t\t\t}, 1500);\n\n\n\t\t\t\t}\n\n\t\t\t\tsetStateisOverGame(true)\n\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\tsetStatetimerId(\"timerNone\")\n\t\t\t\tsetStateprogressId(\"progressNone\")\n\n\t\t\t} else {\n\n\t\t\t}\n\t\t} else {\n\n\t\t}\n\n\n\t}\n\n\tconst [statusNextButton, setStateStatusNextButton] = useState(false)\n\treturn (\n\t\t<Panel id={props.id} separator={false}>\n\n\n\t\t\t{error === false ? (\n\t\t\t\t<>\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\t\t\t\t</PanelHeader>\n\t\t\t\t\t<div className=\"stage\" style={{ overflow: 'hidden' }}>\n\t\t\t\t\t\t{animation === true ? (\n\t\t\t\t\t\t\t<>\n\n\t\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t<div className=\"topBlock\">\n\t\t\t\t\t\t\t<div className=\"titlePlay\">{props.title}</div>\n\t\t\t\t\t\t\t<div className=\"earth\"></div>\n\t\t\t\t\t\t\t<Div className=\"userCityName\">{geoUser}</Div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"blockCities\">\n\t\t\t\t\t\t\t<div className=\"cityDivLeft\"><Button style={{ pointerEvents: `${statusButton}`, cursor: 'pointer' }} className={statusLeftButton} onClick={() => userResponseLeft()} size=\"l\" mode=\"outline\"><div className='textLeftBut'>{leftCity}<br />{leftCityDictance}</div></Button></div>\n\t\t\t\t\t\t\t<div className=\"cityDivRight\"><Button style={{ pointerEvents: `${statusButton}`, cursor: 'pointer' }} className={statusRightButton} onClick={() => userResponseRight()} size=\"l\" mode=\"outline\"><div className='textRightBut'>{rightCity}<br />{rightCityDictance}</div></Button></div>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div className=\"blockProgressItems\">\n\t\t\t\t\t\t\t<div className=\"progressItems\">\n\t\t\t\t\t\t\t\t<div className={resultId}>{result}</div>\n\t\t\t\t\t\t\t\t<div className={progressId}><Progress className='progresSlider' value={count} />\n\t\t\t\t\t\t\t\t\t<div className={timerId}>{timer}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{statusNextButton === true ? (\n\t\t\t\t\t\t\t\t\t<div className=\"blockNextLevelButtons\"><Button style={{ cursor: 'pointer' }} className=\"nextButtonLevel\" onClick={() => nextGame()} size=\"l\" mode=\"outline\"><div className='textNextBut'>Далее</div></Button></div>\n\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</div></>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t<div className=\"titleLoader\">Не удалось получить данные. Проверьте подключение к сети.</div>\n\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\n\n\n\t\t</Panel>\n\t)\n\n};\n\nexport default Play;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, List, Div, Cell, PanelHeaderBack, Button, Group, Header, Separator, Input } from '@vkontakte/vkui/';\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\nimport './Style.css';\nimport Icon28DeleteOutline from '@vkontakte/icons/dist/28/delete_outline';\n\nimport { firebase } from './Firebase.config.js';\nrequire('dotenv').config();\nconst Settings = (props) => {\n\n\tconst [pos, setPos] = useState()\n\tconst [error, setError] = useState(false)\n\tconst [errorSearch, setErrorSearch] = useState(false)\n\tconst [errorSearchValue, setErrorSearchValue] = useState()\n\n\tconst [lengthSearch, setStateLengthSearch] = useState(0)\n\tconst [checkClick, setStateCheckClick] = useState(false)\n\n\tconst [descriptionAdress0, setStateDescriptionAdress0] = useState('')\n\tconst [nameAdress0, setStateNameAdress0] = useState()\n\tconst [position0, setStatePosition0] = useState()\n\n\tconst [descriptionAdress1, setStateDescriptionAdress1] = useState('')\n\tconst [nameAdress1, setStateNameAdress1] = useState()\n\tconst [position1, setStatePosition1] = useState()\n\n\n\tconst [descriptionAdress2, setStateDescriptionAdress2] = useState()\n\tconst [nameAdress2, setStateNameAdress2] = useState()\n\tconst [position2, setStatePosition2] = useState()\n\n\tconst [description0, setStateDescription0] = useState('Предпочтительнее выбрать место своего проживания.')\n\tconst [description1, setStateDescription1] = useState('Внимание, на устройстве должны быть включены службы геолокации.')\n\n\tconst [chooseGeo0, setStateChooseGeo0] = useState()\n\tconst [chooseGeo1, setStateChooseGeo1] = useState()\n\n\tconst [chooseDescription, setStateChooseDescription] = useState()\n\tconst [chooseName, setStateChooseName] = useState()\n\tconst [score, setScore] = useState(0)\n\tconst [valueInput, setValueInput] = useState()\n\n\n\n\n\tuseEffect(() => {\n\t\tfunction checkOnlineState() {\n\t\t\tif (navigator.onLine) {\n\n\t\t\t} else {\n\t\t\t\tsetError(true)\n\t\t\t\tconsole.log('нету сети');\n\t\t\t}\n\t\t}\n\t\tcheckOnlineState();\n\t\twindow.addEventListener('online', checkOnlineState);\n\t\t\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": ['geo', 'pos', 'typeGeo'] })\n\t\t\t.then(data => {\n\n\t\t\t\tif (isNaN(parseInt(data.keys[1].value))) {\n\n\t\t\t\t} else {\n\t\t\t\t\tif (data.keys[2].value === 'maps') {\n\t\t\t\t\t\tsetStateChooseGeo0(data.keys[0].value)\n\t\t\t\t\t\tsetStateChooseGeo1()\n\t\t\t\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\t\t\t}\n\t\t\t\t\tif (data.keys[2].value === 'gps') {\n\t\t\t\t\t\tsetStateChooseGeo0()\n\t\t\t\t\t\tsetStateChooseGeo1(data.keys[0].value)\n\t\t\t\t\t\tsetStateDescription1('Расстояние до городов/стран будет рассчитываться относительно этой точки.')\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t}, []);\n\n\tconst searchChange = () => {\n\t\tlet titleRegExp = /[!@#$%^&*()_+?><:\"}{|~`,/+\\`}1234567890;'\".d]/;\n\t\tif (titleRegExp.test(document.getElementById('search').value)) {\n\t\t\tsetErrorSearch(true)\n\t\t\tsetErrorSearchValue('Введите корректное название.')\n\t\t} else {\n\t\t\tlet titleRegExp1 = new RegExp(\"[А-яа-яA-Za-z\\s]{15,}\");\n\t\t\tif (titleRegExp1.test(document.getElementById('search').value)) {\n\t\t\t\tsetErrorSearch(true)\n\t\t\t\tsetErrorSearchValue('Введите корректное название.')\n\t\t\t} else {\n\t\t\tsetValueInput(document.getElementById('search').value)\n\t\t\tsetStateLengthSearch(document.getElementById('search').value.length)\n\t\t\tconst key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\n\t\t\tconst api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${document.getElementById('search').value}&apikey=${key}`;\n\t\t\tif (document.getElementById('search').value.length > 0) {\n\t\t\t\tfetch(api)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (isNaN(document.getElementById('search').value)) {\n\t\t\t\t\t\t\tsetErrorSearch(false)\n\t\t\t\t\t\t\tsetStateCheckClick(false)\n\t\t\t\t\t\t\tsetStateNameAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.name)\n\t\t\t\t\t\t\tsetStatePosition0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ').reverse())\n\t\t\t\t\t\t\tsetStateDescriptionAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\n\t\t\t\t\t\t\tsetStateNameAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.name)\n\t\t\t\t\t\t\tsetStatePosition1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.Point.pos.split(' ', 2).reverse())\n\t\t\t\t\t\t\tsetStateDescriptionAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.description)\n\t\t\t\t\t\t\tsetStateNameAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.name)\n\t\t\t\t\t\t\tsetStateDescriptionAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.description)\n\t\t\t\t\t\t\tsetStatePosition2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.Point.pos.split(' ', 2).reverse())\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (document.getElementById('search').value.length > 0) {\n\t\t\t\t\t\t\t\tsetErrorSearch(true)\n\t\t\t\t\t\t\t\tsetErrorSearchValue('Введите корректное название.')\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (document.getElementById('search').value.length === 0) {\n\t\t\t\t\t\t\tsetErrorSearch(false)\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tif (document.getElementById('search').value.length > 20) {\n\t\t\t\t\t\t\tsetErrorSearch(true)\n\t\t\t\t\t\t\tsetErrorSearchValue('Введите корректное название.')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (document.getElementById('search').value.length === 0) {\n\t\t\t\t\t\t\tsetErrorSearch(false)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t\tif (document.getElementById('search').value.length === 0) {\n\t\t\t\tsetErrorSearch(false)\n\t\t\t}\n\t}\n\t\t\n\t\tif (document.getElementById('search').value.length === 0) {\n\t\t\tsetErrorSearch(false)\n\t\t}\n\t}\n\n\tconst getPosition0 = () => {\n\n\t\tif (descriptionAdress0 === undefined || descriptionAdress0 === '') {\n\t\t\tsetStateChooseGeo0()\n\t\t\tsetStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(nameAdress0)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress0)\n\t\t\tsetStateChooseName(nameAdress0)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position0}`, `${nameAdress0}`)\n\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\n\t\t}\n\n\t}\n\tconst getPosition1 = () => {\n\n\t\tif (descriptionAdress1 === undefined || descriptionAdress1 === '') {\n\t\t\tsetStateChooseGeo0()\n\t\t\tsetStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(nameAdress1)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress1)\n\t\t\tsetStateChooseName(nameAdress1)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position1}`, `${nameAdress1}`)\n\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\n\t\t}\n\n\t}\n\tconst getPosition2 = () => {\n\n\t\tif (descriptionAdress2 === undefined || descriptionAdress2 === '') {\n\t\t\tsetStateDescription0('Ошибка при получении данных, воспользуйтесь GPS.')\n\t\t\tsetStateChooseGeo0()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(nameAdress2)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress2)\n\t\t\tsetStateChooseName(nameAdress2)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position2}`, `${nameAdress2}`)\n\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\n\t\t}\n\t}\n\n\tconst getPositionWithGps = () => {\n\t\t\n\t\t\n\t\tbridge.send(\"VKWebAppGetGeodata\")\n\t\t\t.then(data => {\n\n\t\t\t\tif (data.lat === undefined) {\n\t\t\t\t\tsetStateDescription1('Данные не получены. Попробуйте включить службы геопозиции в самом устройстве.')\n\t\t\t\t} else {\n\t\t\t\t\tsetPos(data.lat)\n\t\t\t\t\tconst key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\n\t\t\t\t\tconst api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${data.long},${data.lat}&apikey=${key}`;\n\n\t\t\t\t\tfetch(api)\n\t\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsetStateDescription0('Предпочтительнее выбрать место своего проживания.')\n\t\t\t\t\t\t\tsetStateDescription1('Расстояние до городов/стран будет рассчитываться относительно этой точки.')\n\t\t\t\t\t\t\tsetStateChooseGeo0()\n\t\t\t\t\t\t    setStateChooseGeo1((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\n\t\t\t\t\t\t\tprops.savePositionGlobal(`${(data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ', 2)[1]},${(data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ', 2)[0]}`, (data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\n\t\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'gps' });\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\t\tsetStateDescription1('Данные не получены. Попробуйте выбрать город через поиск выше.')\n\n\t\t\t\t\t\t})\n\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (isNaN(pos)) {\n\t\t\t\t\tsetStateDescription1('Данные не получены. Дайте разрешение на использование геоданных или выберите город/населенный пункт через поиск выше.')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t}\n\n\n\tconst offAnimation = () => {\n\t\tprops.offAnimationGlobal()\n\t\t\n\t\t\n\t}\n\n\treturn (\n\n\t\t<Panel id={props.id} separator={false}>\n\n\n\n\t\t\t{error === false ? (\n\t\t\t\t<>\n\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer', overflow: 'hidden' }} onClick={() => window.history.go(-1)} />}>\n\t\t\t\t\t\tНастройки\n             </PanelHeader>\n\t\t\t\t\t<div className='stage' style={{ overflow: 'hidden' }}>\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div style={{ position: 'relative', marginTop: '21vh', overflow: 'hidden' }}>\n\t\t\t\t\t\t\t<Separator />\n\n\t\t\t\t\t\t\t<>{score >= 0 ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Group header={\n\t\t\t\t\t\t\t\t\t\t<Header>Выберите город</Header>}>\n\t\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t\t<Input  style={{ cursor: 'pointer' }} defaultValue={valueInput} id='search' onChange={() => searchChange()} placeholder='Поиск'></Input>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t\t{errorSearch === false ? (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t{lengthSearch > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List style={{ overflow: 'auto' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={descriptionAdress0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => getPosition0()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nameAdress0}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={descriptionAdress1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => getPosition1()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nameAdress1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={descriptionAdress2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => getPosition2()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nameAdress2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={description0}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{chooseGeo0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<> <Cell multiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errorSearchValue}\n\t\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n \n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t<Group header={\n\t\t\t\t\t\t\t\t\t\t<Header>Или воспользуйтесь GPS</Header>}>\n\t\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ cursor: 'pointer' }} before={<Icon28PlaceOutline style={{ color: \"white\" }} />} onClick={() => getPositionWithGps()} size='xl' mode='outline'>Получить геоданные</Button></Div>\n\t\t\t\t\t\t\t\t\t\t<Cell description={description1} multiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t{chooseGeo1}\n\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t\t\t\t<Div><Button style={{ cursor: 'pointer' }} before={props.animationButIcon} onClick={() => offAnimation()} size='xl' mode='outline'>{props.textButton}</Button></Div>\n\t\t\t\t\t\t\t\t\t</Group>\n\n\t\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}</>\n\n\n\t\t\t\t\t\t</div></div></>\n\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t<div className=\"titleLoader\">Не удалось получить данные. Проверьте подключение к сети.</div>\n\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Panel>\n\t)\n};\n\nexport default Settings;\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, Separator, PanelHeaderBack, RichCell, Header, Group, Avatar, ScreenSpinner, Div, Button } from '@vkontakte/vkui/';\nimport { firebase } from './Firebase.config.js';\nimport Icon28ShareOutline from '@vkontakte/icons/dist/28/share_outline';\nimport './Style.css';\nrequire('dotenv').config();\n\nconst Rating = (props) => {\n\tconst [animation, setAnimation] = useState(props.animation)\n\n\tconst [error, setError] = useState(false)\n\n\tconst [userName, setUserName] = useState()\n\tconst [photo, setPhoto] = useState()\n\tconst [score, setScore] = useState()\n\n\tconst [userName0, setUserName0] = useState()\n\tconst [photo0, setPhoto0] = useState()\n\tconst [score0, setScore0] = useState()\n\tconst [link0, setLink0] = useState()\n\n\n\tconst [userName1, setUserName1] = useState()\n\tconst [photo1, setPhoto1] = useState()\n\tconst [score1, setScore1] = useState()\n\tconst [link1, setLink1] = useState()\n\n\tconst [userName2, setUserName2] = useState()\n\tconst [photo2, setPhoto2] = useState()\n\tconst [score2, setScore2] = useState()\n\tconst [link2, setLink2] = useState()\n\n\tconst [userName3, setUserName3] = useState()\n\tconst [photo3, setPhoto3] = useState()\n\tconst [score3, setScore3] = useState()\n\tconst [link3, setLink3] = useState()\n\n\tconst [userName4, setUserName4] = useState()\n\tconst [photo4, setPhoto4] = useState()\n\tconst [score4, setScore4] = useState()\n\tconst [link4, setLink4] = useState()\n\n\tconst [userName5, setUserName5] = useState()\n\tconst [photo5, setPhoto5] = useState()\n\tconst [score5, setScore5] = useState()\n\tconst [link5, setLink5] = useState()\n\n\tconst [userName6, setUserName6] = useState()\n\tconst [photo6, setPhoto6] = useState()\n\tconst [score6, setScore6] = useState()\n\tconst [link6, setLink6] = useState()\n\n\tconst [allPlayers, setallPlayers] = useState()\n\n\n\tuseEffect(() => {\n\n\n\n\n\t\tfunction checkOnlineState() {\n\t\t\tif (navigator.onLine) {\n\n\t\t\t} else {\n\t\t\t\tsetError(true)\n\t\t\t\tconsole.log('нету сети');\n\t\t\t}\n\t\t}\n\t\tcheckOnlineState();\n\t\twindow.addEventListener('online', checkOnlineState);\n\n\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).get()\n\t\t\t.then((snapshot) => {\n\n\t\t\t\tconst allUsersRating = snapshot.docs.map((obj) => (\n\t\t\t\t\t{ ...obj.data() }\n\t\t\t\t))\n\t\t\t\tallUsersRating.sort(function (a, b) {\n\t\t\t\t\treturn b['score'] - a['score'];\n\t\t\t\t});\n\n\t\t\t\tsetallPlayers(allUsersRating.length)\n\t\t\t\tsetUserName0(allUsersRating[0].first_name.replace('&#39;', \"'\") + ' ' + allUsersRating[0].last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto0(allUsersRating[0].photo)\n\t\t\t\tsetScore0(allUsersRating[0].score)\n\t\t\t\tsetLink0(allUsersRating[0].link)\n\n\t\t\t\tsetUserName1(allUsersRating[1].first_name.replace('&#39;', \"'\") + ' ' + allUsersRating[1].last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto1(allUsersRating[1].photo)\n\t\t\t\tsetScore1(allUsersRating[1].score)\n\t\t\t\tsetLink1(allUsersRating[1].link)\n\n\t\t\t\tsetUserName2(allUsersRating[2].first_name.replace('&#39;', \"'\") + ' ' + allUsersRating[2].last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto2(allUsersRating[2].photo)\n\t\t\t\tsetScore2(allUsersRating[2].score)\n\t\t\t\tsetLink2(allUsersRating[2].link)\n\n\t\t\t\tsetUserName3(allUsersRating[3].first_name.replace('&#39;', \"'\") + ' ' + allUsersRating[3].last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto3(allUsersRating[3].photo)\n\t\t\t\tsetScore3(allUsersRating[3].score)\n\t\t\t\tsetLink3(allUsersRating[3].link)\n\n\t\t\t\tsetUserName4(allUsersRating[4].first_name.replace('&#39;', \"'\") + ' ' + allUsersRating[4].last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto4(allUsersRating[4].photo)\n\t\t\t\tsetScore4(allUsersRating[4].score)\n\t\t\t\tsetLink4(allUsersRating[4].link)\n\n\n\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log('Недостаточно данных для отображения статистики');\n\t\t\t})\n\n\n\n\n\n\n\n\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t.then(data => {\n\n\t\t\t\tsetUserName(data.first_name.replace('&#39;', \"'\") + ' ' + data.last_name.replace('&#39;', \"'\"))\n\t\t\t\tsetPhoto(data.photo_200)\n\n\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tsetScore(doc.data().score)\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\tconsole.log('Первоначальная установка значений');\n\t\t\t\t\t\tfirebase.firestore().collection(toString(process.env.vn845gh845gi4ufe782dermj394)).doc(data.id.toString()).set({\n\t\t\t\t\t\t\tscore: 0,\n\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t\tlast_name: data.last_name,\n\t\t\t\t\t\t\tphoto: data.photo_200,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetScore(0)\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetError(true)\n\t\t\t})\n\n\t}, [firebase])\n\n\treturn (\n\n\t\t<Panel id={props.id} separator={false} >\n\n\t\t\t{error === false ? (\n\t\t\t\t<>\n\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\t\t\t\t\t\t{props.alertText}\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t<div className=\"stage\" style={{ overflow: 'hidden' }}>\n\t\t\t\t\t\t{animation === true ? (\n\t\t\t\t\t\t\t<>\n\n\t\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t<li></li>\n\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div style={{ position: 'relative', marginTop: '21vh' }}>\n\t\t\t\t\t\t\t<Separator />\n\t\t\t\t\t\t\t{score >= 0 ? (\n\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{props.alert === false ? (\n\t\t\t\t\t\t\t\t\t\t<Group header={\n\t\t\t\t\t\t\t\t\t\t\t<Header>Всего игроков за день — {allPlayers}</Header>}>\n\t\t\t\t\t\t\t\t\t\t\t{score0 > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ cursor: 'pointer' }} target='_blank' href={link0} before={<Avatar size={48} src={photo0} />} after={`${score0}` + ' км'}>{userName0}</RichCell>\n\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{score1 > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ cursor: 'pointer' }} target='_blank' href={link1} before={<Avatar size={48} src={photo1} />} after={`${score1}` + ' км'}>{userName1}</RichCell>\n\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{score2 > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ cursor: 'pointer' }} target='_blank' href={link2} before={<Avatar size={48} src={photo2} />} after={`${score2}` + ' км'}>{userName2}</RichCell>\n\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{score3 > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ cursor: 'pointer' }} target='_blank' href={link3} before={<Avatar size={48} src={photo3} />} after={`${score3}` + ' км'}>{userName3}</RichCell>\n\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{score4 > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ cursor: 'pointer' }} target='_blank' href={link4} before={<Avatar size={48} src={photo4} />} after={`${score4}` + ' км'}>{userName4}</RichCell>\n\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<RichCell style={{ pointerEvents: 'none' }} after={`${score}` + ' км'}>Ваш результат</RichCell>\n\t\t\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button style={{ cursor: 'pointer' }} mode='outline' size='xl' before={<Icon28ShareOutline style={{ color: \"white\" }} />} onClick={() => props.shareResult(score)}>Поделиться</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t\t\t{props.snackbar}\n\t\t\t\t\t\t\t\t\t\t</Group>\n\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\n\n\n\t\t\t\t\t\t</div></div></>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t<div className=\"titleLoader\">Не удалось получить данные. Проверьте подключение к сети.</div>\n\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\t\t</Panel>\n\t)\n};\n\nexport default Rating;\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, Div, PanelHeaderBack, Cell, Button, Avatar, Group, Header, Separator, Snackbar } from '@vkontakte/vkui/';\nimport AvatarApp from '../img/AvatarApp.png'\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ReportOutline from '@vkontakte/icons/dist/28/report_outline';\nimport './Style.css';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\n\nconst Info = (props) => {\n\tconst [error, setError] = useState(false)\n\tconst [download, setDownload] = useState(0)\n\tconst [snackbar, setSnackbar] = useState(null)\n\n\tuseEffect(() => {\n\t\tfunction checkOnlineState() {\n\t\t\tif (navigator.onLine) {\n\n\t\t\t} else {\n\t\t\t\tsetError(true)\n\t\t\t\tconsole.log('нету сети');\n\t\t\t}\n\t\t}\n\t\tcheckOnlineState();\n\t\twindow.addEventListener('online', checkOnlineState);\n\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t.then(data => {\n\t\t\t\tsetDownload(data.id)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetError(true)\n\t\t\t})\n\t}, [])\n\tconst [statusButton, setStatusButton] = useState('inherit')\n\n\tconst subGroup = () => {\n\t\tsetStatusButton('none')\n\t\tbridge.send(\"VKWebAppJoinGroup\", { \"group_id\": 199216189 })\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.result);\n\t\t\t\tsetSnackbar(\n\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\tbefore={<Avatar size={24}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n\t\t\t\t\t>\n\t\t\t\t\t\tВы подписаны!\n      </Snackbar>\n\t\t\t\t)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t\tsetTimeout(() => {\n\t\t\tsetStatusButton('inherit')\n\t\t}, 1000);\n\t}\n\n\treturn (\n\t\t<Panel id={props.id} separator={false}>\n\n\n\n\t\t\t{error === false ? (\n\t\t\t\t<>\n\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\t\t\t\t\t\tИнформация\n             </PanelHeader>\n\t\t\t\t\t<div className='stage' style={{ overflow: 'hidden' }}>\n\n\n\t\t\t\t\t\t<div style={{ position: 'relative', marginTop: '21vh' }}>\n\t\t\t\t\t\t\t<Separator />\n\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{download > 1 ? (\n\t\t\t\t\t\t\t\t\t<>\n\n\t\t\t\t\t\t\t\t\t\t<Group header={\n\t\t\t\t\t\t\t\t\t\t\t<Header className='selectText'>Техническая информация</Header>}>\n\n\t\t\t\t\t\t\t\t\t\t\t<Cell before={<Avatar mode=\"app\" src={AvatarApp} />} description='Последнее обновление 18.10.2020. На данный момент доступно 197 стран, 195 столиц и 297 городов России.' multiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t\tВерсия 1.0.1\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Div><Button style={{ cursor: 'pointer' }} before={<Icon28ReportOutline style={{ color: \"white\" }} />} target=\"_blank\" mode='outline' size='xl' href='https://vk.me/club199216189'>Сообщить об ошибке</Button></Div>\n\n\t\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t\t<Group header={\n\t\t\t\t\t\t\t\t\t\t\t<Header className='selectText'>Сообщество Вконтакте</Header>}>\n\n\t\t\t\t\t\t\t\t\t\t\t<Cell style={{ cursor: 'pointer' }} href='https://vk.com/club199216189' target=\"_blank\" before={<Avatar mode=\"app\" src={AvatarApp} />} description='Mini Apps' multiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t\tTowner\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Div><Button style={{ cursor: 'pointer' }} before={<Icon28Messages style={{ color: \"white\" }} />} target=\"_blank\" mode='outline' size='xl' href='https://vk.me/join/xWGB9MiGwRsL8PUET1c7l1YUSnxWw3iwzoU='>Официальный чат</Button></Div>\n\n\t\t\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button style={{ pointerEvents: `${statusButton}`, cursor: 'pointer' }} before={<Icon28Newsfeed style={{ color: \"white\" }} />} mode='outline' size='xl' onClick={() => subGroup()}>Подписаться</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t\t{snackbar}\n\t\t\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}</>\n\n\n\t\t\t\t\t\t</div></div></>\n\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PanelHeader transparent left={<PanelHeaderBack  style={{ cursor: 'pointer' }} onClick={() => window.history.go(-1)} />}>\n\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<div className=\"stage\">\n\t\t\t\t\t\t\t<ul className='circles'>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t\t</ul>\n\n\n\t\t\t\t\t\t\t<div className=\"blockLoaderForPanel\">\n\t\t\t\t\t\t\t\t<div className=\"titleLoader\">Не удалось получить данные. Проверьте подключение к сети.</div>\n\t\t\t\t\t\t\t\t<div className=\"earthLoaderForPanel\"></div>\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Panel>\n\n\t)\n};\n\nexport default Info;\n\n\n\n\n\n","import React, { useState } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Panel, PanelHeader, List, Div, Cell, PanelHeaderBack, Button, Group, Header, Separator, Input } from '@vkontakte/vkui/';\r\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\r\nimport './Style.css';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst Settings = (props) => {\r\n    const [pos, setPos] = useState()\r\n\r\n    const [errorSearch, setErrorSearch] = useState(false)\r\n    const [errorSearchValue, setErrorSearchValue] = useState()\r\n\r\n    const [lengthSearch, setStateLengthSearch] = useState(0)\r\n\r\n    const [descriptionAdress0, setStateDescriptionAdress0] = useState('')\r\n    const [nameAdress0, setStateNameAdress0] = useState()\r\n    const [position0, setStatePosition0] = useState()\r\n\r\n    const [descriptionAdress1, setStateDescriptionAdress1] = useState('')\r\n    const [nameAdress1, setStateNameAdress1] = useState()\r\n    const [position1, setStatePosition1] = useState()\r\n\r\n\r\n    const [descriptionAdress2, setStateDescriptionAdress2] = useState()\r\n    const [nameAdress2, setStateNameAdress2] = useState()\r\n    const [position2, setStatePosition2] = useState()\r\n\r\n    const [description0, setStateDescription0] = useState('Предпочтительнее выбрать место своего проживания.')\r\n    const [description1, setStateDescription1] = useState('Внимание, на устройстве должны быть включены службы геолокации.')\r\n\r\n    const [chooseGeo0, setStateChooseGeo0] = useState()\r\n    const [chooseGeo1, setStateChooseGeo1] = useState()\r\n\r\n\r\n    const [valueInput, setValueInput] = useState()\r\n\r\n\r\n\r\n\r\n    const searchChange = () => {\r\n        let titleRegExp = /[!@#$%^&*()_+?><:\"}{|~`,/+\\`}1234567890;'\".d]/;\r\n        if (titleRegExp.test(document.getElementById('search').value)) {\r\n            setErrorSearch(true)\r\n            setErrorSearchValue('Введите корректное название.')\r\n        } else {\r\n            let titleRegExp1 = new RegExp(\"[А-яа-яA-Za-z\\s]{15,}\");\r\n            if (titleRegExp1.test(document.getElementById('search').value)) {\r\n                setErrorSearch(true)\r\n                setErrorSearchValue('Введите корректное название.')\r\n            } else {\r\n                setValueInput(document.getElementById('search').value)\r\n                setStateLengthSearch(document.getElementById('search').value.length)\r\n                const key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\r\n                const api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${document.getElementById('search').value}&apikey=${key}`;\r\n                if (document.getElementById('search').value.length > 0) {\r\n                    fetch(api)\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            if (isNaN(document.getElementById('search').value)) {\r\n                                setErrorSearch(false)\r\n                                \r\n                                setStateNameAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.name)\r\n                                setStatePosition0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ').reverse())\r\n                                setStateDescriptionAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\r\n                                setStateNameAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.name)\r\n                                setStatePosition1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.Point.pos.split(' ', 2).reverse())\r\n                                setStateDescriptionAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.description)\r\n                                setStateNameAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.name)\r\n                                setStateDescriptionAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.description)\r\n                                setStatePosition2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.Point.pos.split(' ', 2).reverse())\r\n                            }\r\n                            else {\r\n                                if (document.getElementById('search').value.length > 0) {\r\n                                    setErrorSearch(true)\r\n                                    setErrorSearchValue('Введите корректное название.')\r\n                                }\r\n\r\n\r\n                            }\r\n                            if (document.getElementById('search').value.length === 0) {\r\n                                setErrorSearch(false)\r\n                            }\r\n\r\n\r\n                        })\r\n\r\n                        .catch(e => {\r\n                            if (document.getElementById('search').value.length > 20) {\r\n                                setErrorSearch(true)\r\n                                setErrorSearchValue('Введите корректное название.')\r\n                            }\r\n                            if (document.getElementById('search').value.length === 0) {\r\n                                setErrorSearch(false)\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n            if (document.getElementById('search').value.length === 0) {\r\n                setErrorSearch(false)\r\n            }\r\n        }\r\n\r\n        if (document.getElementById('search').value.length === 0) {\r\n            setErrorSearch(false)\r\n        }\r\n    }\r\n    const getPosition0 = () => {\r\n\r\n        if (descriptionAdress0 === undefined || descriptionAdress0 === '') {\r\n            setStateChooseGeo0()\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n            \r\n            \r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position0}`, `${descriptionAdress0}, ${nameAdress0}`)\r\n            props.goToPage('Home')\r\n            bridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\r\n        }\r\n\r\n    }\r\n    const getPosition1 = () => {\r\n\r\n        if (descriptionAdress1 === undefined || descriptionAdress1 === '') {\r\n            setStateChooseGeo0()\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n            \r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position1}`, `${descriptionAdress1}, ${nameAdress1}`)\r\n            props.goToPage('Home')\r\n            bridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\r\n        }\r\n\r\n    }\r\n    const getPosition2 = () => {\r\n\r\n        if (descriptionAdress2 === undefined || descriptionAdress2 === '') {\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            setStateChooseGeo0()\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n          \r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position2}`, `${descriptionAdress2}, ${nameAdress2}`)\r\n            props.goToPage('Home')\r\n            bridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'maps' });\r\n        }\r\n    }\r\n\r\n    const getPositionWithGps = () => {\r\n\r\n\r\n        bridge.send(\"VKWebAppGetGeodata\")\r\n            .then(data => {\r\n\r\n                if (data.lat === undefined) {\r\n                    setStateDescription1('Данные не получены. Попробуйте включить службы геопозиции в самом устройстве.')\r\n                } else {\r\n                    setPos(data.lat)\r\n                    const key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\r\n                    const api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${data.long},${data.lat}&apikey=${key}`;\r\n\r\n                    fetch(api)\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            props.goToPage('Home')\r\n                            setStateDescription0('Предпочтительнее выбрать место своего проживания.')\r\n                            setStateDescription1('Расстояние до городов/стран будет рассчитываться относительно этой точки.')\r\n                            setStateChooseGeo0()\r\n                            console.log((data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ', 2)[0]);\r\n                            setStateChooseGeo1((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\r\n                            props.savePositionGlobal(`${(data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ', 2)[1]},${(data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ', 2)[0]}`, (data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\r\n                            bridge.send(\"VKWebAppStorageSet\", { \"key\": \"typeGeo\", \"value\": 'gps' });\r\n                        })\r\n\r\n                        .catch(e => {\r\n                            if (isNaN(pos)) {\r\n                                setStateDescription1('Данные не получены. Дайте разрешение на использование геоданных или выберите город/населенный пункт через поиск выше.')\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setStateDescription1('Данные не получены. Дайте разрешение на использование геоданных или выберите город/населенный пункт через поиск выше.')\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Panel id={props.id} separator={false}>\r\n            <PanelHeader transparent left={<PanelHeaderBack style={{ cursor: 'pointer' }} onClick={() => window.history.back()} />}>\r\n                \r\n        </PanelHeader>\r\n            <div className='stage' style={{ overflow: 'hidden' }}>\r\n\r\n                <div style={{ position: 'relative', marginTop: '21vh' }}>\r\n                    <Separator />\r\n                    <Group>\r\n                        <h1 style={{textAlign: 'center'}}>Для продолжения укажите свое местоположение</h1>\r\n                        <Header>Выберите город</Header>\r\n                        <Div>\r\n                            <Input style={{ cursor: 'pointer' }} defaultValue={valueInput} id='search' onChange={() => searchChange()} placeholder='Поиск'></Input>\r\n\r\n                        </Div>\r\n                        {errorSearch === false ? (\r\n                            <>\r\n                                {lengthSearch > 0 ? (\r\n                                    <List >\r\n                                        <Cell multiline={true}\r\n                                            description={descriptionAdress0}\r\n                                            onClick={() => getPosition0()}>\r\n                                            {nameAdress0}\r\n\r\n                                        </Cell>\r\n                                        <Cell multiline={true}\r\n                                            description={descriptionAdress1}\r\n                                            onClick={() => getPosition1()}>\r\n                                            {nameAdress1}\r\n                                        </Cell>\r\n                                        <Cell multiline={true}\r\n                                            description={descriptionAdress2}\r\n                                            onClick={() => getPosition2()}>\r\n                                            {nameAdress2}\r\n                                        </Cell>\r\n                                    </List>\r\n                                ) : (\r\n                                        <Cell multiline={true}\r\n                                            description={description0}>\r\n                                            {chooseGeo0}\r\n                                        </Cell>\r\n                                    )}\r\n                            </>\r\n                        ) : (\r\n                                <> <Cell multiline={true}>\r\n\r\n                                    {errorSearchValue}\r\n                                </Cell>\r\n\r\n                                </>\r\n                            )}\r\n                    </Group>\r\n                    <Group header={\r\n                        <Header>Или воспользуйтесь GPS</Header>}>\r\n                        <Div>\r\n                            <Button style={{ cursor: 'pointer' }} mode='outline' before={<Icon28PlaceOutline style={{ color: \"white\" }} />} onClick={() => getPositionWithGps()} size='xl'>Получить геоданные</Button></Div>\r\n                        <Cell description={description1} multiline={true}>\r\n                            {chooseGeo1}\r\n                        </Cell>\r\n                    </Group>\r\n                </div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Settings;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Snackbar, Avatar } from '@vkontakte/vkui/';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport Icon28DoneOutline from '@vkontakte/icons/dist/28/done_outline';\nimport Icon28CancelOutline from '@vkontakte/icons/dist/28/cancel_outline';\nimport Loader from './panels/Loader';\nimport Intro from './panels/Intro';\nimport Home from './panels/Home';\nimport Play from './panels/Play';\nimport Settings from './panels/Settings';\nimport Rating from './panels/Rating';\nimport Info from './panels/Info';\nimport Warning from './panels/Warning';\n\nconst lights = ['bright_light', 'client_light'];\nconst arrAllLeft = [[[\"city\", \"Канберра\"], [\"lat\", -35.28346], [\"long\", 149.12807]], [[\"city\", \"Вена\"], [\"lat\", 48.20849], [\"long\", 16.37208]], [[\"city\", \"Баку\"], [\"lat\", 40.37767], [\"long\", 49.8920]], [[\"city\", \"Тирана\"], [\"lat\", 41.32750], [\"long\", 19.818890]], [[\"city\", \"Алжир\"], [\"lat\", 36.75250], [\"long\", 3]], [[\"city\", \"Луанда\"], [\"lat\", -8.8368], [\"long\", 13.234]], [[\"city\", \"Андорра-ла-Велья\"], [\"lat\", 42.50779], [\"long\", 1.52109]], [[\"city\", \"Сент-Джонс\"], [\"lat\", 47.56494], [\"long\", -52.70931]], [[\"city\", \"Буэнос-Айрес\"], [\"lat\", -34.61315], [\"long\", -58.377230]], [[\"city\", \"Ереван\"], [\"lat\", 40.18111], [\"long\", 44.51361]], [[\"city\", \"Кабул\"], [\"lat\", 34.52813], [\"long\", 69.17233]], [[\"city\", \"Нассау\"], [\"lat\", 25.05823], [\"long\", -77.3430600]], [[\"city\", \"Дакка\"], [\"lat\", 23.710400], [\"long\", 90.40744]], [[\"city\", \"Бриджтаун\"], [\"lat\", 13.10000], [\"long\", -59.616670]], [[\"city\", \"Манама\"], [\"lat\", 26.22787], [\"long\", 50.58565]], [[\"city\", \"Бельмопан\"], [\"lat\", 17.25000], [\"long\", -88.76667]], [[\"city\", \"Минск\"], [\"lat\", 53.90000], [\"long\", 27.56667]], [[\"city\", \"Брюссель\"], [\"lat\", 50.85045], [\"long\", 4.348780]], [[\"city\", \"Порто-Ново\"], [\"lat\", 6.49646], [\"long\", 2.60359]], [[\"city\", \"София\"], [\"lat\", 42.6975], [\"long\", 23.3241]], [[\"city\", \"Сукре\"], [\"lat\", -19.03332], [\"long\", -65]], [[\"city\", \"Сараево\"], [\"lat\", 43.84864], [\"long\", 18.35644]], [[\"city\", \"Габороне\"], [\"lat\", -24.65451], [\"long\", 25.90859]], [[\"city\", \"Бразилия\"], [\"lat\", -15.7797], [\"long\", -47.92972]], [[\"city\", \"Бандар-Сери-Бегавана\"], [\"lat\", 4.940290], [\"long\", 114.94806]], [[\"city\", \"Уагадугу\"], [\"lat\", 12.36566], [\"long\", -1.53388]], [[\"city\", \"Гитеге\"], [\"lat\", -3.42640], [\"long\", 29.9308]], [[\"city\", \"Тхимпху\"], [\"lat\", 27.46609], [\"long\", 89.6419]], [[\"city\", \"Порт-Вила\"], [\"lat\", -17.733810], [\"long\", 168.32188]], [[\"city\", \"Ватикан\"], [\"lat\", 41.90236], [\"long\", 12.45332]], [[\"city\", \"Лондон\"], [\"lat\", 51.5085], [\"long\", -0.12574]], [[\"city\", \"Будапешт\"], [\"lat\", 47.49801], [\"long\", 47.49801]], [[\"city\", \"Каракас\"], [\"lat\", 10.488010], [\"long\", -66.87919]], [[\"city\", \"Дили\"], [\"lat\", -8.558610], [\"long\", 125.57361]], [[\"city\", \"Ханой\"], [\"lat\", 21.024500], [\"long\", 105.84117]], [[\"city\", \"Либревиль\"], [\"lat\", 0.392410], [\"long\", 9.4535]], [[\"city\", \"Порт-о-Пренс\"], [\"lat\", 18.53917], [\"long\", -72.335000]], [[\"city\", \"Джорджтаун\"], [\"lat\", 6.804480], [\"long\", -58.15527]], [[\"city\", \"Банжул\"], [\"lat\", 13.45274], [\"long\", -16.57803]], [[\"city\", \"Аккра\"], [\"lat\", 5.55602], [\"long\", -0.19690]], [[\"city\", \"Гватемала\"], [\"lat\", 14.640720], [\"long\", -90.51327]], [[\"city\", \"Конакри\"], [\"lat\", 9.53795], [\"long\", -13.67729]], [[\"city\", \"Бисау\"], [\"lat\", 11.86357], [\"long\", -15.59767]], [[\"city\", \"Берлин\"], [\"lat\", 52.52437], [\"long\", 13.41053]], [[\"city\", \"Тегусигальпа\"], [\"lat\", 14.0818], [\"long\", -87.20681]], [[\"city\", \"Сент-Джорджес\"], [\"lat\", 12.0561], [\"long\", -61.7488]], [[\"city\", \"Афина\"], [\"lat\", 37.97945], [\"long\", 23.716220]], [[\"city\", \"Тбилиси\"], [\"lat\", 41.69411], [\"long\", 44.83368]], [[\"city\", \"Копенгаген\"], [\"lat\", 55.67594], [\"long\", 12.5655]], [[\"city\", \"Киншаса\"], [\"lat\", -4.32758], [\"long\", 15.31357]], [[\"city\", \"Джибути\"], [\"lat\", 11.58901], [\"long\", 43.14503]], [[\"city\", \"Санто-Доминго\"], [\"lat\", 18.50012], [\"long\", -69.98857]], [[\"city\", \"Санто-Доминго\"], [\"lat\", 18.50012], [\"long\", -69.98857]], [[\"city\", \"Каир\"], [\"lat\", 30.06263], [\"long\", 31.24967]], [[\"city\", \"Лусака\"], [\"lat\", -15.40669], [\"long\", 28.28713]], [[\"city\", \"Эль-Аюн\"], [\"lat\", 27.14180], [\"long\", -13.18797]], [[\"city\", \"Хараре\"], [\"lat\", -17.82772], [\"long\", 31.053370]], [[\"city\", \"Иерусалим\"], [\"lat\", 31.76904], [\"long\", 35.216330]], [[\"city\", \"Нью-Дели\"], [\"lat\", 28.63576], [\"long\", 77.22445]], [[\"city\", \"Джакарта\"], [\"lat\", -6.21462], [\"long\", 106.84513]], [[\"city\", \"Амман\"], [\"lat\", 31.95522], [\"long\", 35.945030]], [[\"city\", \"Багдад\"], [\"lat\", 33.34058], [\"long\", 44.40088]], [[\"city\", \"Тегеран\"], [\"lat\", 35.6943], [\"long\", 51.42151]], [[\"city\", \"Дублин\"], [\"lat\", 53.333060], [\"long\", -6.24889]], [[\"city\", \"Рейкьявик\"], [\"lat\", 64.135480], [\"long\", -21.89541]], [[\"city\", \"Мадрид\"], [\"lat\", 40.41650], [\"long\", -3.70256]], [[\"city\", \"Рим\"], [\"lat\", 41.89193], [\"long\", 12.51133]], [[\"city\", \"Сана\"], [\"lat\", 15.35472], [\"long\", 44.20667]], [[\"city\", \"Прая\"], [\"lat\", 14.93152], [\"long\", -23.51254]], [[\"city\", \"Нур-Султан\"], [\"lat\", 51.180100], [\"long\", 71.44598]], [[\"city\", \"Пномпень\"], [\"lat\", 11.5624500], [\"long\", 104.91601]], [[\"city\", \"Яунде\"], [\"lat\", 3.8666], [\"long\", 11.51667]], [[\"city\", \"Оттава\"], [\"lat\", 45.41117], [\"long\", -75.69812]], [[\"city\", \"Доха\"], [\"lat\", 25.27932], [\"long\", 51.52245]], [[\"city\", \"Найроби\"], [\"lat\", -1.28333], [\"long\", 36.81667]], [[\"city\", \"Никосия\"], [\"lat\", 35.175310], [\"long\", 33.36420]], [[\"city\", \"Бишкек\"], [\"lat\", 42.870], [\"long\", 74.590]], [[\"city\", \"Южная Тарава\"], [\"lat\", 1.3278], [\"long\", 172.97696]], [[\"city\", \"Пекин\"], [\"lat\", 39.9075], [\"long\", 116.39723]], [[\"city\", \"Богота\"], [\"lat\", 4.60971], [\"long\", -74.08175]], [[\"city\", \"Морони\"], [\"lat\", -11.7021], [\"long\", 43.25506]], [[\"city\", \"Браззавиль\"], [\"lat\", -4.2661], [\"long\", 15.28318]], [[\"city\", \"Сан-Хосе\"], [\"lat\", 9.93333], [\"long\", -84]], [[\"city\", \"Ямусукро\"], [\"lat\", 6.82055], [\"long\", -5.27674]], [[\"city\", \"Гавана\"], [\"lat\", 23.1330], [\"long\", -82.3830]], [[\"city\", \"Эль-Кувейт\"], [\"lat\", 29.36972], [\"long\", 47.9783]], [[\"city\", \"Вьентьян\"], [\"lat\", 17.96667], [\"long\", 102.6000]], [[\"city\", \"Рига\"], [\"lat\", 56.9460], [\"long\", 24.10589]], [[\"city\", \"Масеру\"], [\"lat\", -29.316], [\"long\", 27.4833]], [[\"city\", \"Монровия\"], [\"lat\", 6.30054], [\"long\", -10.7969]], [[\"city\", \"Бейрут\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Триполи\"], [\"lat\", 32.87519], [\"long\", 13.18746]], [[\"city\", \"Вильнюс\"], [\"lat\", 54.6891], [\"long\", 25.27980]], [[\"city\", \"Вадуц\"], [\"lat\", 47.14151], [\"long\", 9.521540]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 6.130]], [[\"city\", \"Порт-Луи\"], [\"lat\", -20.16194], [\"long\", 57.49889]], [[\"city\", \"Нуакшот\"], [\"lat\", 18.085810], [\"long\", -15.9785]], [[\"city\", \"Антананариву\"], [\"lat\", -18.91368], [\"long\", 47.53613]], [[\"city\", \"Лилонгве\"], [\"lat\", -13.9669], [\"long\", 33.78725]], [[\"city\", \"Куала-Лумпур\"], [\"lat\", 3.141200], [\"long\", 101.6865]], [[\"city\", \"Бамако\"], [\"lat\", 12.6500], [\"long\", -8.00000]], [[\"city\", \"Мале\"], [\"lat\", 4.17480], [\"long\", 73.50888]], [[\"city\", \"Валлетта\"], [\"lat\", 35.89972], [\"long\", 14.51472]], [[\"city\", \"Рабат\"], [\"lat\", 34.01325], [\"long\", -6.83255]], [[\"city\", \"Маджуро\"], [\"lat\", 7.08971], [\"long\", 171.38027]], [[\"city\", \"Мехико\"], [\"lat\", 19.42847], [\"long\", -99.12766]], [[\"city\", \"Паликир\"], [\"lat\", 6.92477], [\"long\", 158.16109]], [[\"city\", \"Австралия\"], [\"lat\", -35.5], [\"long\", 149]], [[\"city\", \"Австрия\"], [\"lat\", 47.333328], [\"long\", 13.33333]], [[\"city\", \"Азербайджан\"], [\"lat\", 40.5], [\"long\", 47.5]], [[\"city\", \"Албания\"], [\"lat\", 42.304482], [\"long\", 2.72135]], [[\"city\", \"Алжир\"], [\"lat\", 28], [\"long\", 3]], [[\"city\", \"Ангола\"], [\"lat\", -12.5], [\"long\", 13.23432]], [[\"city\", \"Андорра\"], [\"lat\", 42.5], [\"long\", 1.52109]], [[\"city\", \"Антигуа\"], [\"lat\", 17.049999], [\"long\", -61.799999]], [[\"city\", \"Аргентина\"], [\"lat\", -31.383329], [\"long\", -64.066673]], [[\"city\", \"Армения\"], [\"lat\", 40], [\"long\", 45]], [[\"city\", \"Афганистан\"], [\"lat\", 33], [\"long\", 66]], [[\"city\", \"Багамские острова\"], [\"lat\", 25.040819], [\"long\", -77.371223]], [[\"city\", \"Бангладеш\"], [\"lat\", 24], [\"long\", 90]], [[\"city\", \"Барбадос\"], [\"lat\", 13.16667], [\"long\", -59.533329]], [[\"city\", \"Бахрейн\"], [\"lat\", 26], [\"long\", 50.5]], [[\"city\", \"Белиз\"], [\"lat\", 17.25], [\"long\", -88.75]], [[\"city\", \"Белоруссия\"], [\"lat\", 53], [\"long\", 28]], [[\"city\", \"Бельгия\"], [\"lat\", 50.833328], [\"long\", 4]], [[\"city\", \"Бенин\"], [\"lat\", 6.49646], [\"long\", 2.60359]], [[\"city\", \"Болгария\"], [\"lat\", 43], [\"long\", 25]], [[\"city\", \"Боливия\"], [\"lat\", -17], [\"long\", -65]], [[\"city\", \"Босния и Герцеговина\"], [\"lat\", 44.25], [\"long\", 17.83333]], [[\"city\", \"Ботсвана\"], [\"lat\", -22], [\"long\", 24]], [[\"city\", \"Бразилия\"], [\"lat\", 39.523651], [\"long\", -87.125023]], [[\"city\", \"Бруней\"], [\"lat\", 4.94029], [\"long\", 114.666672]], [[\"city\", \"Буркина-Фасо\"], [\"lat\", 13], [\"long\", -2]], [[\"city\", \"Бурунди\"], [\"lat\", -3.5], [\"long\", 30]], [[\"city\", \"Бутан\"], [\"lat\", 27.4660], [\"long\", 90.5]], [[\"city\", \"Вануату\"], [\"lat\", -16], [\"long\", 167]], [[\"city\", \"Ватикан\"], [\"lat\", 41.902359], [\"long\", 12.45332]], [[\"city\", \"Великобритания\"], [\"lat\", 54.758438], [\"long\", -2.69531]], [[\"city\", \"Венгрия\"], [\"lat\", 47], [\"long\", 20]], [[\"city\", \"Венесуэла\"], [\"lat\", 8], [\"long\", -66]], [[\"city\", \"Восточный Тимор\"], [\"lat\", -8.83333], [\"long\", 125.75]], [[\"city\", \"Вьетнам\"], [\"lat\", 16.16667], [\"long\", 107.833328]], [[\"city\", \"Габон\"], [\"lat\", -1], [\"long\", 9.4535]], [[\"city\", \"Гаити\"], [\"lat\", 19], [\"long\", -72.416672]], [[\"city\", \"Гайана\"], [\"lat\", 5], [\"long\", -59]], [[\"city\", \"Гамбия\"], [\"lat\", 13.45274], [\"long\", -15.5]], [[\"city\", \"Гана\"], [\"lat\", 8], [\"long\", -2]], [[\"city\", \"Гватемала\"], [\"lat\", 14.6407], [\"long\", -90.25]], [[\"city\", \"Гвинея\"], [\"lat\", 11], [\"long\", -10]], [[\"city\", \"Гвинея-Бисау\"], [\"lat\", 12], [\"long\", -15]], [[\"city\", \"Германия\"], [\"lat\", 51.5], [\"long\", 13.41053]], [[\"city\", \"Гондурас\"], [\"lat\", 15], [\"long\", -86.5]], [[\"city\", \"Гренада\"], [\"lat\", 12.11667], [\"long\", -61.666672]], [[\"city\", \"Греция\"], [\"lat\", 38.352428], [\"long\", 23.13995]], [[\"city\", \"Грузия\"], [\"lat\", 42], [\"long\", 43.5]], [[\"city\", \"Дания\"], [\"lat\", 56], [\"long\", 10]], [[\"city\", \"Демократическая Республика Конго\"], [\"lat\", 0], [\"long\", 25]], [[\"city\", \"Джибути\"], [\"lat\", 11.5890], [\"long\", 42.5]], [[\"city\", \"Доминика\"], [\"lat\", 15.5], [\"long\", -61.333328]], [[\"city\", \"Доминиканская Республика\"], [\"lat\", 19], [\"long\", -70.666672]], [[\"city\", \"Египет\"], [\"lat\", 27], [\"long\", 30]], [[\"city\", \"Замбия\"], [\"lat\", -15], [\"long\", 30]], [[\"city\", \"Западная Сахара\"], [\"lat\", 27.162239], [\"long\", -13.20315]], [[\"city\", \"Зимбабве\"], [\"lat\", -19], [\"long\", 29]], [[\"city\", \"Израиль\"], [\"lat\", 31.5], [\"long\", 34.75]], [[\"city\", \"Индия\"], [\"lat\", 20], [\"long\", 77]], [[\"city\", \"Индонезия\"], [\"lat\", -5], [\"long\", 120]], [[\"city\", \"Иордания\"], [\"lat\", 31], [\"long\", 36]], [[\"city\", \"Ирак\"], [\"lat\", 33], [\"long\", 44]], [[\"city\", \"Иран\"], [\"lat\", 32], [\"long\", 53]], [[\"city\", \"Ирландия\"], [\"lat\", 53], [\"long\", -8]], [[\"city\", \"Исландия\"], [\"lat\", 65], [\"long\", -18]], [[\"city\", \"Испания\"], [\"lat\", 40], [\"long\", -4]], [[\"city\", \"Италия\"], [\"lat\", 43.698292], [\"long\", 10.39955]], [[\"city\", \"Йемен\"], [\"lat\", 15.5], [\"long\", 47.5]], [[\"city\", \"Кабо-Верде\"], [\"lat\", 16], [\"long\", -24]], [[\"city\", \"Казахстан\"], [\"lat\", 48], [\"long\", 68]], [[\"city\", \"Камбоджа\"], [\"lat\", 13], [\"long\", 105]], [[\"city\", \"Камерун\"], [\"lat\", 6], [\"long\", 12]], [[\"city\", \"Канада\"], [\"lat\", 60.108669], [\"long\", -113.642578]], [[\"city\", \"Катар\"], [\"lat\", 25.27932], [\"long\", 51.25]], [[\"city\", \"Кения\"], [\"lat\", 1], [\"long\", 38]], [[\"city\", \"Кипр\"], [\"lat\", 35], [\"long\", 33]], [[\"city\", \"Киргизия\"], [\"lat\", 41], [\"long\", 75]], [[\"city\", \"Кирибати\"], [\"lat\", 1.421], [\"long\", 172.983994]], [[\"city\", \"Китай\"], [\"lat\", 35], [\"long\", 105]], [[\"city\", \"Колумбия\"], [\"lat\", 4], [\"long\", -72]], [[\"city\", \"Коморские острова\"], [\"lat\", -12.23333], [\"long\", 44.44553]], [[\"city\", \"Конго\"], [\"lat\", -1], [\"long\", 15]], [[\"city\", \"Коста-Рика\"], [\"lat\", 10], [\"long\", -84]], [[\"city\", \"Кот-д'Ивуар\"], [\"lat\", 8], [\"long\", -5]], [[\"city\", \"Куба\"], [\"lat\", 22], [\"long\", -79.5]], [[\"city\", \"Кувейт\"], [\"lat\", 29.36972], [\"long\", 47.75]], [[\"city\", \"Лаос\"], [\"lat\", 20.34222], [\"long\", 104.344643]], [[\"city\", \"Латвия\"], [\"lat\", 57], [\"long\", 25]], [[\"city\", \"Лесото\"], [\"lat\", -29.5], [\"long\", 28.25]], [[\"city\", \"Либерия\"], [\"lat\", 6.30054], [\"long\", -9.5]], [[\"city\", \"Ливан\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Ливия\"], [\"lat\", 25], [\"long\", 17]], [[\"city\", \"Литва\"], [\"lat\", 56], [\"long\", 24]], [[\"city\", \"Лихтенштейн\"], [\"lat\", 47.166672], [\"long\", 9.53333]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 6.130]], [[\"city\", \"Маврикий\"], [\"lat\", -20.299999], [\"long\", 57.583328]], [[\"city\", \"Мавритания\"], [\"lat\", 20], [\"long\", -12]], [[\"city\", \"Мадагаскар\"], [\"lat\", -20], [\"long\", 47]], [[\"city\", \"Малави\"], [\"lat\", -13.5], [\"long\", 34]], [[\"city\", \"Малайзия\"], [\"lat\", 3.141200], [\"long\", 112.5]], [[\"city\", \"Мали\"], [\"lat\", 17], [\"long\", -4]], [[\"city\", \"Мальдивы\"], [\"lat\", 4.1748], [\"long\", 73]], [[\"city\", \"Мальта\"], [\"lat\", 35.916672], [\"long\", 14.43333]], [[\"city\", \"Марокко\"], [\"lat\", 32], [\"long\", -5]], [[\"city\", \"Маршалловы острова\"], [\"lat\", 7.113], [\"long\", 171.235992]], [[\"city\", \"Мексика\"], [\"lat\", 23], [\"long\", -102]], [[\"city\", \"Микронезия\"], [\"lat\", 6.924], [\"long\", 158.162003]], [[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]]];\nconst arrAllRight = [[[\"city\", \"Мапуту\"], [\"lat\", -25.9655], [\"long\", 32.5832]], [[\"city\", \"Кишинёв\"], [\"lat\", 47.0056], [\"long\", 28.8575]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Улан-Батор\"], [\"lat\", 47.9077], [\"long\", 106.883]], [[\"city\", \"Нейпьидо\"], [\"lat\", 19.745], [\"long\", 96.12972]], [[\"city\", \"Виндхук\"], [\"lat\", -22.5594], [\"long\", 17.08323]], [[\"city\", \"Катманду\"], [\"lat\", 27.70169], [\"long\", 85.3206]], [[\"city\", \"Абуджа\"], [\"lat\", 9.05785], [\"long\", 7.49508]], [[\"city\", \"Амстердам\"], [\"lat\", 52.3740], [\"long\", 4.889]], [[\"city\", \"Манагуа\"], [\"lat\", 12.1328], [\"long\", -86.2504]], [[\"city\", \"Веллингтон\"], [\"lat\", -41.2866], [\"long\", 174.77557]], [[\"city\", \"Осло\"], [\"lat\", 59.9127], [\"long\", 10.74609]], [[\"city\", \"Абу-Даби\"], [\"lat\", 24.46667], [\"long\", 54.36667]], [[\"city\", \"Маскат\"], [\"lat\", 23.58413], [\"long\", 58.40778]], [[\"city\", \"Исламабад\"], [\"lat\", 33.72148], [\"long\", 73.04329]], [[\"city\", \"Нгерулмуд \"], [\"lat\", 7.503], [\"long\", 134.624]], [[\"city\", \"Рамалла\"], [\"lat\", 31.89964], [\"long\", 35.20422]], [[\"city\", \"Панама\"], [\"lat\", 8.993], [\"long\", -79.51973]], [[\"city\", \"Порт-Морсби\"], [\"lat\", -9.44314], [\"long\", 147.1797]], [[\"city\", \"Асунсьон\"], [\"lat\", -25.30066], [\"long\", -57.63591]], [[\"city\", \"Лима\"], [\"lat\", -12.04318], [\"long\", -77.02824]], [[\"city\", \"Варшава\"], [\"lat\", 52.22977], [\"long\", 21.01178]], [[\"city\", \"Лиссабон\"], [\"lat\", 38.71667], [\"long\", -9.1333300]], [[\"city\", \"Москва\"], [\"lat\", 55.65122], [\"long\", 37.51422]], [[\"city\", \"Кигали\"], [\"lat\", -1.94995], [\"long\", 30.05885]], [[\"city\", \"Бухарест\"], [\"lat\", 44.43225], [\"long\", 26.10626]], [[\"city\", \"Сан-Сальвадор\"], [\"lat\", 13.68935], [\"long\", -89.187180]], [[\"city\", \"Апиа\"], [\"lat\", -13.8333], [\"long\", -171.76666]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.93667], [\"long\", 12.44639]], [[\"city\", \"Сан-Томе\"], [\"lat\", 0.33654], [\"long\", 6.72732]], [[\"city\", \"Эр-Рияд\"], [\"lat\", 24.68773], [\"long\", 46.72185]], [[\"city\", \"Пхеньян\"], [\"lat\", 39.03385], [\"long\", 125.75432]], [[\"city\", \"Скопье\"], [\"lat\", 41.99646], [\"long\", 21.43141]], [[\"city\", \"Виктория\"], [\"lat\", -4.61667], [\"long\", 55.45000]], [[\"city\", \"Дакар\"], [\"lat\", 14.6937], [\"long\", -17.4440]], [[\"city\", \"Кингстаун\"], [\"lat\", 13.15872], [\"long\", -61.22475]], [[\"city\", \"Кингстаун\"], [\"lat\", 13.1587], [\"long\", -61.22475]], [[\"city\", \"Кастри\"], [\"lat\", 13.9957], [\"long\", -61.0061]], [[\"city\", \"Белград\"], [\"lat\", 44.804010], [\"long\", 20.46513]], [[\"city\", \"Сингапур\"], [\"lat\", 1.28967], [\"long\", 103.85007]], [[\"city\", \"Дамаск\"], [\"lat\", 33.5102], [\"long\", 36.2912]], [[\"city\", \"Братислав\"], [\"lat\", 48.1481], [\"long\", 17.1067]], [[\"city\", \"Любляна\"], [\"lat\", 46.05108], [\"long\", 14.50513]], [[\"city\", \"Хониара\"], [\"lat\", -9.43333], [\"long\", 159.950]], [[\"city\", \"Могадишо\"], [\"lat\", 2.037110], [\"long\", 45.34375]], [[\"city\", \"Хартум\"], [\"lat\", 15.55177], [\"long\", 32.53241]], [[\"city\", \"Парамарибо\"], [\"lat\", 5.86638], [\"long\", -55.16682]], [[\"city\", \"Вашингтон\"], [\"lat\", 38.89511], [\"long\", -77.03637]], [[\"city\", \"Фритаун\"], [\"lat\", 8.4840], [\"long\", -13.22994]], [[\"city\", \"Душанбе\"], [\"lat\", 38.53575], [\"long\", 68.779050]], [[\"city\", \"Бангкок\"], [\"lat\", 13.7539], [\"long\", 100.50144]], [[\"city\", \"Тайбэй\"], [\"lat\", 25.0478], [\"long\", 121.532]], [[\"city\", \"Додома\"], [\"lat\", -6.17221], [\"long\", 35.73947]], [[\"city\", \"Ломе\"], [\"lat\", 6.13748], [\"long\", 1.21227]], [[\"city\", \"Нукуалофа\"], [\"lat\", -21.13938], [\"long\", -175.2018]], [[\"city\", \"Порт-оф-Спейн\"], [\"lat\", 10.66668], [\"long\", -61.51889]], [[\"city\", \"Фунафути\"], [\"lat\", -8.5167], [\"long\", 179.2166]], [[\"city\", \"Тунис\"], [\"lat\", 36.81897], [\"long\", 10.16579]], [[\"city\", \"Ашхабад\"], [\"lat\", 37.95000], [\"long\", 58.38333]], [[\"city\", \"Анкара\"], [\"lat\", 39.91987], [\"long\", 32.85427]], [[\"city\", \"Кампала\"], [\"lat\", 0.31628], [\"long\", 32.582190]], [[\"city\", \"Ташкент\"], [\"lat\", 41.26465], [\"long\", 69.21627]], [[\"city\", \"Киев\"], [\"lat\", 50.4546], [\"long\", 30.52380]], [[\"city\", \"Монтевидео\"], [\"lat\", -34.9032], [\"long\", -56.1881]], [[\"city\", \"Сува\"], [\"lat\", -18.14161], [\"long\", 178.44149]], [[\"city\", \"Манилы\"], [\"lat\", 14.60420], [\"long\", 120.9822]], [[\"city\", \"Хельсинки\"], [\"lat\", 60.16952], [\"long\", 24.9354]], [[\"city\", \"Париж\"], [\"lat\", 48.85341], [\"long\", 2.3488]], [[\"city\", \"Загреб\"], [\"lat\", 45.81444], [\"long\", 15.9779]], [[\"city\", \"Банги\"], [\"lat\", 4.36122], [\"long\", 18.5549]], [[\"city\", \"Нджамена\"], [\"lat\", 12.10672], [\"long\", 15.0444]], [[\"city\", \"Подгорица\"], [\"lat\", 42.44111], [\"long\", 19.26361]], [[\"city\", \"Прага\"], [\"lat\", 50.088040], [\"long\", 14.42076]], [[\"city\", \"Сантьяго\"], [\"lat\", -33.45694], [\"long\", -70.64827]], [[\"city\", \"Берн\"], [\"lat\", 46.94809], [\"long\", 7.447440]], [[\"city\", \"Стокгольм\"], [\"lat\", 59.3325], [\"long\", 18.0649]], [[\"city\", \"Шри-Джаяварденепура-Котте\"], [\"lat\", 6.882970], [\"long\", 79.90708]], [[\"city\", \"Кито\"], [\"lat\", -0.22985], [\"long\", -78.52495]], [[\"city\", \"Малабо\"], [\"lat\", 3.7500], [\"long\", 8.78333]], [[\"city\", \"Асмэра\"], [\"lat\", 15.338050], [\"long\", 38.93184]], [[\"city\", \"Мбабане\"], [\"lat\", -26.31667], [\"long\", 31.1333]], [[\"city\", \"Таллин\"], [\"lat\", 59.43696], [\"long\", 24.75353]], [[\"city\", \"Аддис-Абеба\"], [\"lat\", 9.024970], [\"long\", 38.74689]], [[\"city\", \"Претория\"], [\"lat\", -25.74486], [\"long\", 28.187830]], [[\"city\", \"Сеул\"], [\"lat\", 37.5660], [\"long\", 126.97840]], [[\"city\", \"Джуба\"], [\"lat\", 4.85165], [\"long\", 31.58247]], [[\"city\", \"Кингстон\"], [\"lat\", 17.99702], [\"long\", -76.79358]], [[\"city\", \"Токио\"], [\"lat\", 35.68950], [\"long\", 139.691710]], [[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]], [[\"city\", \"Молдавия\"], [\"lat\", 47], [\"long\", 29]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Монголия\"], [\"lat\", 46], [\"long\", 105]], [[\"city\", \"Мьянма\"], [\"lat\", 22], [\"long\", 98]], [[\"city\", \"Намибия\"], [\"lat\", -22], [\"long\", 17]], [[\"city\", \"Науру\"], [\"lat\", -0.517], [\"long\", 166.932999]], [[\"city\", \"Непал\"], [\"lat\", 28], [\"long\", 84]], [[\"city\", \"Нигер\"], [\"lat\", 16], [\"long\", 8]], [[\"city\", \"Нигерия\"], [\"lat\", 10], [\"long\", 8]], [[\"city\", \"Нидерланды\"], [\"lat\", 52.5], [\"long\", 27515]], [[\"city\", \"Никарагуа\"], [\"lat\", 13], [\"long\", -85]], [[\"city\", \"Новая Зеландия\"], [\"lat\", -42], [\"long\", 174]], [[\"city\", \"Норвегия\"], [\"lat\", 62], [\"long\", 10]], [[\"city\", \"ОАЭ\"], [\"lat\", 24], [\"long\", 54]], [[\"city\", \"Оман\"], [\"lat\", 21], [\"long\", 57]], [[\"city\", \"Пакистан\"], [\"lat\", 30], [\"long\", 70]], [[\"city\", \"Палау\"], [\"lat\", 7.503], [\"long\", 134.621002]], [[\"city\", \"Палестина\"], [\"lat\", 31.92157], [\"long\", 35.203289]], [[\"city\", \"Панама\"], [\"lat\", 8.9936], [\"long\", -79.51973]], [[\"city\", \"Папуа - Новая Гвинея\"], [\"lat\", -6], [\"long\", 147]], [[\"city\", \"Парагвай\"], [\"lat\", -22.99333], [\"long\", -57.996391]], [[\"city\", \"Перу\"], [\"lat\", -10], [\"long\", -76]], [[\"city\", \"Польша\"], [\"lat\", 52], [\"long\", 20]], [[\"city\", \"Португалия\"], [\"lat\", 38.726349], [\"long\", -9.14843]], [[\"city\", \"Руанда\"], [\"lat\", -2], [\"long\", 30]], [[\"city\", \"Румыния\"], [\"lat\", 46], [\"long\", 25]], [[\"city\", \"Сальвадор\"], [\"lat\", 13.83333], [\"long\", -88.916672]], [[\"city\", \"Самоа\"], [\"lat\", -13.8031], [\"long\", -172.178314]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.933331], [\"long\", 12.44639]], [[\"city\", \"Сан-Томе и Принсипи\"], [\"lat\", 1], [\"long\", 7]], [[\"city\", \"Саудовская Аравия\"], [\"lat\", 25], [\"long\", 45]], [[\"city\", \"Северная Корея\"], [\"lat\", 40], [\"long\", 127]], [[\"city\", \"Северная Македония\"], [\"lat\", 41.833328], [\"long\", 22]], [[\"city\", \"Сейшельские острова\"], [\"lat\", -4.58333], [\"long\", 55.666672]], [[\"city\", \"Сенегал\"], [\"lat\", 14], [\"long\", -14]], [[\"city\", \"Сент-Винсент и Гренадины\"], [\"lat\", 13.08333], [\"long\", -61.200001]], [[\"city\", \"Сент-Китс и Невис\"], [\"lat\", 17.33333], [\"long\", -62.75]], [[\"city\", \"Сент-Люсия\"], [\"lat\", 13.88333], [\"long\", -60.966671]], [[\"city\", \"Сербия\"], [\"lat\", 44.81892], [\"long\", 20.45998]], [[\"city\", \"Сингапур\"], [\"lat\", 1.36667], [\"long\", 103.800003]], [[\"city\", \"Сирия\"], [\"lat\", 35], [\"long\", 38]], [[\"city\", \"Словакия\"], [\"lat\", 48.666668], [\"long\", 17.1067]], [[\"city\", \"Словения\"], [\"lat\", 46.25], [\"long\", 15.16667]], [[\"city\", \"Соломоновы острова\"], [\"lat\", -8], [\"long\", 159]], [[\"city\", \"Сомали\"], [\"lat\", 6], [\"long\", 48]], [[\"city\", \"Судан\"], [\"lat\", 16], [\"long\", 30]], [[\"city\", \"Суринам\"], [\"lat\", 4], [\"long\", -56]], [[\"city\", \"США\"], [\"lat\", 39.759998], [\"long\", -98.5]], [[\"city\", \"Сьерра-Леоне\"], [\"lat\", 8.4840], [\"long\", -11.5]], [[\"city\", \"Таджикистан\"], [\"lat\", 39], [\"long\", 71]], [[\"city\", \"Таиланд\"], [\"lat\", 15], [\"long\", 100]], [[\"city\", \"Тайвань\"], [\"lat\", 24], [\"long\", 121]], [[\"city\", \"Танзания\"], [\"lat\", -6], [\"long\", 35]], [[\"city\", \"Того\"], [\"lat\", 8], [\"long\", 1.16667]], [[\"city\", \"Тонга\"], [\"lat\", -20], [\"long\", -175]], [[\"city\", \"Тринидад и Тобаго\"], [\"lat\", 11], [\"long\", -61]], [[\"city\", \"Тувалу\"], [\"lat\", -8.51719], [\"long\", 179.144775]], [[\"city\", \"Тунис\"], [\"lat\", 34], [\"long\", 9]], [[\"city\", \"Туркмения\"], [\"lat\", 40], [\"long\", 60]], [[\"city\", \"Турция\"], [\"lat\", 39.05901], [\"long\", 34.911549]], [[\"city\", \"Уганда\"], [\"lat\", 2], [\"long\", 33]], [[\"city\", \"Узбекистан\"], [\"lat\", 41.707539], [\"long\", 63.84911]], [[\"city\", \"Уругвай\"], [\"lat\", -33], [\"long\", -56]], [[\"city\", \"Фиджи\"], [\"lat\", -18], [\"long\", 178]], [[\"city\", \"Филиппины\"], [\"lat\", 13], [\"long\", 122]], [[\"city\", \"Финляндия\"], [\"lat\", 64], [\"long\", 26]], [[\"city\", \"Франция\"], [\"lat\", 46], [\"long\", 2]], [[\"city\", \"Хорватия\"], [\"lat\", 45.166672], [\"long\", 15.5]], [[\"city\", \"ЦАР\"], [\"lat\", 7], [\"long\", 21]], [[\"city\", \"Чад\"], [\"lat\", 15], [\"long\", 19]], [[\"city\", \"Черногория\"], [\"lat\", 42.5], [\"long\", 19.299999]], [[\"city\", \"Чехия\"], [\"lat\", 49.75], [\"long\", 15]], [[\"city\", \"Чили\"], [\"lat\", -30], [\"long\", -71]], [[\"city\", \"Швейцария\"], [\"lat\", 47.000156], [\"long\", 8.014269]], [[\"city\", \"Швеция\"], [\"lat\", 62], [\"long\", 15]], [[\"city\", \"Шри-Ланка\"], [\"lat\", 7], [\"long\", 81]], [[\"city\", \"Эквадор\"], [\"lat\", -2], [\"long\", -77.5]], [[\"city\", \"Экваториальная Гвинея\"], [\"lat\", 2], [\"long\", 10]], [[\"city\", \"Эритрея\"], [\"lat\", 15], [\"long\", 39]], [[\"city\", \"Эсватини (Свазиленд)\"], [\"lat\", -26.5], [\"long\", 31.133330]], [[\"city\", \"Эстония\"], [\"lat\", 59], [\"long\", 26]], [[\"city\", \"Эфиопия\"], [\"lat\", 8], [\"long\", 38]], [[\"city\", \"ЮАР\"], [\"lat\", -30], [\"long\", 26]], [[\"city\", \"Южная Корея\"], [\"lat\", 37], [\"long\", 127.5]], [[\"city\", \"Южный Судан\"], [\"lat\", 4.84023], [\"long\", 31.59428]], [[\"city\", \"Ямайка\"], [\"lat\", 18.25], [\"long\", -77.5]], [[\"city\", \"Япония\"], [\"lat\", 35.68536], [\"long\", 139.753098]]];\nconst arrGeoLeft = [[[\"city\", \"Канберра\"], [\"lat\", -35.28346], [\"long\", 149.12807]], [[\"city\", \"Вена\"], [\"lat\", 48.20849], [\"long\", 16.37208]], [[\"city\", \"Баку\"], [\"lat\", 40.37767], [\"long\", 49.8920]], [[\"city\", \"Тирана\"], [\"lat\", 41.32750], [\"long\", 19.818890]], [[\"city\", \"Алжир\"], [\"lat\", 36.75250], [\"long\", 3]], [[\"city\", \"Луанда\"], [\"lat\", -8.8368], [\"long\", 13.234]], [[\"city\", \"Андорра-ла-Велья\"], [\"lat\", 42.50779], [\"long\", 1.52109]], [[\"city\", \"Сент-Джонс\"], [\"lat\", 47.56494], [\"long\", -52.70931]], [[\"city\", \"Буэнос-Айрес\"], [\"lat\", -34.61315], [\"long\", -58.377230]], [[\"city\", \"Ереван\"], [\"lat\", 40.18111], [\"long\", 44.51361]], [[\"city\", \"Кабул\"], [\"lat\", 34.52813], [\"long\", 69.17233]], [[\"city\", \"Нассау\"], [\"lat\", 25.05823], [\"long\", -77.3430600]], [[\"city\", \"Дакка\"], [\"lat\", 23.710400], [\"long\", 90.40744]], [[\"city\", \"Бриджтаун\"], [\"lat\", 13.10000], [\"long\", -59.616670]], [[\"city\", \"Манама\"], [\"lat\", 26.22787], [\"long\", 50.58565]], [[\"city\", \"Бельмопан\"], [\"lat\", 17.25000], [\"long\", -88.76667]], [[\"city\", \"Минск\"], [\"lat\", 53.90000], [\"long\", 27.56667]], [[\"city\", \"Брюссель\"], [\"lat\", 50.85045], [\"long\", 4.348780]], [[\"city\", \"Порто-Ново\"], [\"lat\", 6.49646], [\"long\", 2.60359]], [[\"city\", \"София\"], [\"lat\", 42.6975], [\"long\", 23.3241]], [[\"city\", \"Сукре\"], [\"lat\", -19.03332], [\"long\", -65]], [[\"city\", \"Сараево\"], [\"lat\", 43.84864], [\"long\", 18.35644]], [[\"city\", \"Габороне\"], [\"lat\", -24.65451], [\"long\", 25.90859]], [[\"city\", \"Бразилия\"], [\"lat\", -15.7797], [\"long\", -47.92972]], [[\"city\", \"Бандар-Сери-Бегавана\"], [\"lat\", 4.940290], [\"long\", 114.94806]], [[\"city\", \"Уагадугу\"], [\"lat\", 12.36566], [\"long\", -1.53388]], [[\"city\", \"Гитеге\"], [\"lat\", -3.42640], [\"long\", 29.9308]], [[\"city\", \"Тхимпху\"], [\"lat\", 27.46609], [\"long\", 89.6419]], [[\"city\", \"Порт-Вила\"], [\"lat\", -17.733810], [\"long\", 168.32188]], [[\"city\", \"Ватикан\"], [\"lat\", 41.90236], [\"long\", 12.45332]], [[\"city\", \"Лондон\"], [\"lat\", 51.5085], [\"long\", -0.12574]], [[\"city\", \"Будапешт\"], [\"lat\", 47.49801], [\"long\", 47.49801]], [[\"city\", \"Каракас\"], [\"lat\", 10.488010], [\"long\", -66.87919]], [[\"city\", \"Дили\"], [\"lat\", -8.558610], [\"long\", 125.57361]], [[\"city\", \"Ханой\"], [\"lat\", 21.024500], [\"long\", 105.84117]], [[\"city\", \"Либревиль\"], [\"lat\", 0.392410], [\"long\", 9.4535]], [[\"city\", \"Порт-о-Пренс\"], [\"lat\", 18.53917], [\"long\", -72.335000]], [[\"city\", \"Джорджтаун\"], [\"lat\", 6.804480], [\"long\", -58.15527]], [[\"city\", \"Банжул\"], [\"lat\", 13.45274], [\"long\", -16.57803]], [[\"city\", \"Аккра\"], [\"lat\", 5.55602], [\"long\", -0.19690]], [[\"city\", \"Гватемала\"], [\"lat\", 14.640720], [\"long\", -90.51327]], [[\"city\", \"Конакри\"], [\"lat\", 9.53795], [\"long\", -13.67729]], [[\"city\", \"Бисау\"], [\"lat\", 11.86357], [\"long\", -15.59767]], [[\"city\", \"Берлин\"], [\"lat\", 52.52437], [\"long\", 13.41053]], [[\"city\", \"Тегусигальпа\"], [\"lat\", 14.0818], [\"long\", -87.20681]], [[\"city\", \"Сент-Джорджес\"], [\"lat\", 12.0561], [\"long\", -61.7488]], [[\"city\", \"Афина\"], [\"lat\", 37.97945], [\"long\", 23.716220]], [[\"city\", \"Тбилиси\"], [\"lat\", 41.69411], [\"long\", 44.83368]], [[\"city\", \"Копенгаген\"], [\"lat\", 55.67594], [\"long\", 12.5655]], [[\"city\", \"Киншаса\"], [\"lat\", -4.32758], [\"long\", 15.31357]], [[\"city\", \"Джибути\"], [\"lat\", 11.58901], [\"long\", 43.14503]], [[\"city\", \"Санто-Доминго\"], [\"lat\", 18.50012], [\"long\", -69.98857]], [[\"city\", \"Санто-Доминго\"], [\"lat\", 18.50012], [\"long\", -69.98857]], [[\"city\", \"Каир\"], [\"lat\", 30.06263], [\"long\", 31.24967]], [[\"city\", \"Лусака\"], [\"lat\", -15.40669], [\"long\", 28.28713]], [[\"city\", \"Эль-Аюн\"], [\"lat\", 27.14180], [\"long\", -13.18797]], [[\"city\", \"Хараре\"], [\"lat\", -17.82772], [\"long\", 31.053370]], [[\"city\", \"Иерусалим\"], [\"lat\", 31.76904], [\"long\", 35.216330]], [[\"city\", \"Нью-Дели\"], [\"lat\", 28.63576], [\"long\", 77.22445]], [[\"city\", \"Джакарта\"], [\"lat\", -6.21462], [\"long\", 106.84513]], [[\"city\", \"Амман\"], [\"lat\", 31.95522], [\"long\", 35.945030]], [[\"city\", \"Багдад\"], [\"lat\", 33.34058], [\"long\", 44.40088]], [[\"city\", \"Тегеран\"], [\"lat\", 35.6943], [\"long\", 51.42151]], [[\"city\", \"Дублин\"], [\"lat\", 53.333060], [\"long\", -6.24889]], [[\"city\", \"Рейкьявик\"], [\"lat\", 64.135480], [\"long\", -21.89541]], [[\"city\", \"Мадрид\"], [\"lat\", 40.41650], [\"long\", -3.70256]], [[\"city\", \"Рим\"], [\"lat\", 41.89193], [\"long\", 12.51133]], [[\"city\", \"Сана\"], [\"lat\", 15.35472], [\"long\", 44.20667]], [[\"city\", \"Прая\"], [\"lat\", 14.93152], [\"long\", -23.51254]], [[\"city\", \"Нур-Султан\"], [\"lat\", 51.180100], [\"long\", 71.44598]], [[\"city\", \"Пномпень\"], [\"lat\", 11.5624500], [\"long\", 104.91601]], [[\"city\", \"Яунде\"], [\"lat\", 3.8666], [\"long\", 11.51667]], [[\"city\", \"Оттава\"], [\"lat\", 45.41117], [\"long\", -75.69812]], [[\"city\", \"Доха\"], [\"lat\", 25.27932], [\"long\", 51.52245]], [[\"city\", \"Найроби\"], [\"lat\", -1.28333], [\"long\", 36.81667]], [[\"city\", \"Никосия\"], [\"lat\", 35.175310], [\"long\", 33.36420]], [[\"city\", \"Бишкек\"], [\"lat\", 42.870], [\"long\", 74.590]], [[\"city\", \"Южная Тарава\"], [\"lat\", 1.3278], [\"long\", 172.97696]], [[\"city\", \"Пекин\"], [\"lat\", 39.9075], [\"long\", 116.39723]], [[\"city\", \"Богота\"], [\"lat\", 4.60971], [\"long\", -74.08175]], [[\"city\", \"Морони\"], [\"lat\", -11.7021], [\"long\", 43.25506]], [[\"city\", \"Браззавиль\"], [\"lat\", -4.2661], [\"long\", 15.28318]], [[\"city\", \"Сан-Хосе\"], [\"lat\", 9.93333], [\"long\", -84]], [[\"city\", \"Ямусукро\"], [\"lat\", 6.82055], [\"long\", -5.27674]], [[\"city\", \"Гавана\"], [\"lat\", 23.1330], [\"long\", -82.3830]], [[\"city\", \"Эль-Кувейт\"], [\"lat\", 29.36972], [\"long\", 47.9783]], [[\"city\", \"Вьентьян\"], [\"lat\", 17.96667], [\"long\", 102.6000]], [[\"city\", \"Рига\"], [\"lat\", 56.9460], [\"long\", 24.10589]], [[\"city\", \"Масеру\"], [\"lat\", -29.316], [\"long\", 27.4833]], [[\"city\", \"Монровия\"], [\"lat\", 6.30054], [\"long\", -10.7969]], [[\"city\", \"Бейрут\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Триполи\"], [\"lat\", 32.87519], [\"long\", 13.18746]], [[\"city\", \"Вильнюс\"], [\"lat\", 54.6891], [\"long\", 25.27980]], [[\"city\", \"Вадуц\"], [\"lat\", 47.14151], [\"long\", 9.521540]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 6.130]], [[\"city\", \"Порт-Луи\"], [\"lat\", -20.16194], [\"long\", 57.49889]], [[\"city\", \"Нуакшот\"], [\"lat\", 18.085810], [\"long\", -15.9785]], [[\"city\", \"Антананариву\"], [\"lat\", -18.91368], [\"long\", 47.53613]], [[\"city\", \"Лилонгве\"], [\"lat\", -13.9669], [\"long\", 33.78725]], [[\"city\", \"Куала-Лумпур\"], [\"lat\", 3.141200], [\"long\", 101.6865]], [[\"city\", \"Бамако\"], [\"lat\", 12.6500], [\"long\", -8.00000]], [[\"city\", \"Мале\"], [\"lat\", 4.17480], [\"long\", 73.50888]], [[\"city\", \"Валлетта\"], [\"lat\", 35.89972], [\"long\", 14.51472]], [[\"city\", \"Рабат\"], [\"lat\", 34.01325], [\"long\", -6.83255]], [[\"city\", \"Маджуро\"], [\"lat\", 7.08971], [\"long\", 171.38027]], [[\"city\", \"Мехико\"], [\"lat\", 19.42847], [\"long\", -99.12766]], [[\"city\", \"Паликир\"], [\"lat\", 6.92477], [\"long\", 158.16109]]];\nconst arrGeoRight = [[[\"city\", \"Мапуту\"], [\"lat\", -25.9655], [\"long\", 32.5832]], [[\"city\", \"Кишинёв\"], [\"lat\", 47.0056], [\"long\", 28.8575]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Улан-Батор\"], [\"lat\", 47.9077], [\"long\", 106.883]], [[\"city\", \"Нейпьидо\"], [\"lat\", 19.745], [\"long\", 96.12972]], [[\"city\", \"Виндхук\"], [\"lat\", -22.5594], [\"long\", 17.08323]], [[\"city\", \"Катманду\"], [\"lat\", 27.70169], [\"long\", 85.3206]], [[\"city\", \"Абуджа\"], [\"lat\", 9.05785], [\"long\", 7.49508]], [[\"city\", \"Амстердам\"], [\"lat\", 52.3740], [\"long\", 4.889]], [[\"city\", \"Манагуа\"], [\"lat\", 12.1328], [\"long\", -86.2504]], [[\"city\", \"Веллингтон\"], [\"lat\", -41.2866], [\"long\", 174.77557]], [[\"city\", \"Осло\"], [\"lat\", 59.9127], [\"long\", 10.74609]], [[\"city\", \"Абу-Даби\"], [\"lat\", 24.46667], [\"long\", 54.36667]], [[\"city\", \"Маскат\"], [\"lat\", 23.58413], [\"long\", 58.40778]], [[\"city\", \"Исламабад\"], [\"lat\", 33.72148], [\"long\", 73.04329]], [[\"city\", \"Нгерулмуд \"], [\"lat\", 7.503], [\"long\", 134.624]], [[\"city\", \"Рамалла\"], [\"lat\", 31.89964], [\"long\", 35.20422]], [[\"city\", \"Панама\"], [\"lat\", 8.993], [\"long\", -79.51973]], [[\"city\", \"Порт-Морсби\"], [\"lat\", -9.44314], [\"long\", 147.1797]], [[\"city\", \"Асунсьон\"], [\"lat\", -25.30066], [\"long\", -57.63591]], [[\"city\", \"Лима\"], [\"lat\", -12.04318], [\"long\", -77.02824]], [[\"city\", \"Варшава\"], [\"lat\", 52.22977], [\"long\", 21.01178]], [[\"city\", \"Лиссабон\"], [\"lat\", 38.71667], [\"long\", -9.1333300]], [[\"city\", \"Москва\"], [\"lat\", 55.65122], [\"long\", 37.51422]], [[\"city\", \"Кигали\"], [\"lat\", -1.94995], [\"long\", 30.05885]], [[\"city\", \"Бухарест\"], [\"lat\", 44.43225], [\"long\", 26.10626]], [[\"city\", \"Сан-Сальвадор\"], [\"lat\", 13.68935], [\"long\", -89.187180]], [[\"city\", \"Апиа\"], [\"lat\", -13.8333], [\"long\", -171.76666]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.93667], [\"long\", 12.44639]], [[\"city\", \"Сан-Томе\"], [\"lat\", 0.33654], [\"long\", 6.72732]], [[\"city\", \"Эр-Рияд\"], [\"lat\", 24.68773], [\"long\", 46.72185]], [[\"city\", \"Пхеньян\"], [\"lat\", 39.03385], [\"long\", 125.75432]], [[\"city\", \"Скопье\"], [\"lat\", 41.99646], [\"long\", 21.43141]], [[\"city\", \"Виктория\"], [\"lat\", -4.61667], [\"long\", 55.45000]], [[\"city\", \"Дакар\"], [\"lat\", 14.6937], [\"long\", -17.4440]], [[\"city\", \"Кингстаун\"], [\"lat\", 13.15872], [\"long\", -61.22475]], [[\"city\", \"Кингстаун\"], [\"lat\", 13.1587], [\"long\", -61.22475]], [[\"city\", \"Кастри\"], [\"lat\", 13.9957], [\"long\", -61.0061]], [[\"city\", \"Белград\"], [\"lat\", 44.804010], [\"long\", 20.46513]], [[\"city\", \"Сингапур\"], [\"lat\", 1.28967], [\"long\", 103.85007]], [[\"city\", \"Дамаск\"], [\"lat\", 33.5102], [\"long\", 36.2912]], [[\"city\", \"Братислав\"], [\"lat\", 48.1481], [\"long\", 17.1067]], [[\"city\", \"Любляна\"], [\"lat\", 46.05108], [\"long\", 14.50513]], [[\"city\", \"Хониара\"], [\"lat\", -9.43333], [\"long\", 159.950]], [[\"city\", \"Могадишо\"], [\"lat\", 2.037110], [\"long\", 45.34375]], [[\"city\", \"Хартум\"], [\"lat\", 15.55177], [\"long\", 32.53241]], [[\"city\", \"Парамарибо\"], [\"lat\", 5.86638], [\"long\", -55.16682]], [[\"city\", \"Вашингтон\"], [\"lat\", 38.89511], [\"long\", -77.03637]], [[\"city\", \"Фритаун\"], [\"lat\", 8.4840], [\"long\", -13.22994]], [[\"city\", \"Душанбе\"], [\"lat\", 38.53575], [\"long\", 68.779050]], [[\"city\", \"Бангкок\"], [\"lat\", 13.7539], [\"long\", 100.50144]], [[\"city\", \"Тайбэй\"], [\"lat\", 25.0478], [\"long\", 121.532]], [[\"city\", \"Додома\"], [\"lat\", -6.17221], [\"long\", 35.73947]], [[\"city\", \"Ломе\"], [\"lat\", 6.13748], [\"long\", 1.21227]], [[\"city\", \"Нукуалофа\"], [\"lat\", -21.13938], [\"long\", -175.2018]], [[\"city\", \"Порт-оф-Спейн\"], [\"lat\", 10.66668], [\"long\", -61.51889]], [[\"city\", \"Фунафути\"], [\"lat\", -8.5167], [\"long\", 179.2166]], [[\"city\", \"Тунис\"], [\"lat\", 36.81897], [\"long\", 10.16579]], [[\"city\", \"Ашхабад\"], [\"lat\", 37.95000], [\"long\", 58.38333]], [[\"city\", \"Анкара\"], [\"lat\", 39.91987], [\"long\", 32.85427]], [[\"city\", \"Кампала\"], [\"lat\", 0.31628], [\"long\", 32.582190]], [[\"city\", \"Ташкент\"], [\"lat\", 41.26465], [\"long\", 69.21627]], [[\"city\", \"Киев\"], [\"lat\", 50.4546], [\"long\", 30.52380]], [[\"city\", \"Монтевидео\"], [\"lat\", -34.9032], [\"long\", -56.1881]], [[\"city\", \"Сува\"], [\"lat\", -18.14161], [\"long\", 178.44149]], [[\"city\", \"Манилы\"], [\"lat\", 14.60420], [\"long\", 120.9822]], [[\"city\", \"Хельсинки\"], [\"lat\", 60.16952], [\"long\", 24.9354]], [[\"city\", \"Париж\"], [\"lat\", 48.85341], [\"long\", 2.3488]], [[\"city\", \"Загреб\"], [\"lat\", 45.81444], [\"long\", 15.9779]], [[\"city\", \"Банги\"], [\"lat\", 4.36122], [\"long\", 18.5549]], [[\"city\", \"Нджамена\"], [\"lat\", 12.10672], [\"long\", 15.0444]], [[\"city\", \"Подгорица\"], [\"lat\", 42.44111], [\"long\", 19.26361]], [[\"city\", \"Прага\"], [\"lat\", 50.088040], [\"long\", 14.42076]], [[\"city\", \"Сантьяго\"], [\"lat\", -33.45694], [\"long\", -70.64827]], [[\"city\", \"Берн\"], [\"lat\", 46.94809], [\"long\", 7.447440]], [[\"city\", \"Стокгольм\"], [\"lat\", 59.3325], [\"long\", 18.0649]], [[\"city\", \"Шри-Джаяварденепура-Котте\"], [\"lat\", 6.882970], [\"long\", 79.90708]], [[\"city\", \"Кито\"], [\"lat\", -0.22985], [\"long\", -78.52495]], [[\"city\", \"Малабо\"], [\"lat\", 3.7500], [\"long\", 8.78333]], [[\"city\", \"Асмэра\"], [\"lat\", 15.338050], [\"long\", 38.93184]], [[\"city\", \"Мбабане\"], [\"lat\", -26.31667], [\"long\", 31.1333]], [[\"city\", \"Таллин\"], [\"lat\", 59.43696], [\"long\", 24.75353]], [[\"city\", \"Аддис-Абеба\"], [\"lat\", 9.024970], [\"long\", 38.74689]], [[\"city\", \"Претория\"], [\"lat\", -25.74486], [\"long\", 28.187830]], [[\"city\", \"Сеул\"], [\"lat\", 37.5660], [\"long\", 126.97840]], [[\"city\", \"Джуба\"], [\"lat\", 4.85165], [\"long\", 31.58247]], [[\"city\", \"Кингстон\"], [\"lat\", 17.99702], [\"long\", -76.79358]], [[\"city\", \"Токио\"], [\"lat\", 35.68950], [\"long\", 139.691710]]];\nconst arrCountryRight = [[[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]], [[\"city\", \"Молдавия\"], [\"lat\", 47], [\"long\", 29]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Монголия\"], [\"lat\", 46], [\"long\", 105]], [[\"city\", \"Мьянма\"], [\"lat\", 22], [\"long\", 98]], [[\"city\", \"Намибия\"], [\"lat\", -22], [\"long\", 17]], [[\"city\", \"Науру\"], [\"lat\", -0.517], [\"long\", 166.932999]], [[\"city\", \"Непал\"], [\"lat\", 28], [\"long\", 84]], [[\"city\", \"Нигер\"], [\"lat\", 16], [\"long\", 8]], [[\"city\", \"Нигерия\"], [\"lat\", 10], [\"long\", 8]], [[\"city\", \"Нидерланды\"], [\"lat\", 52.5], [\"long\", 27515]], [[\"city\", \"Никарагуа\"], [\"lat\", 13], [\"long\", -85]], [[\"city\", \"Новая Зеландия\"], [\"lat\", -42], [\"long\", 174]], [[\"city\", \"Норвегия\"], [\"lat\", 62], [\"long\", 10]], [[\"city\", \"ОАЭ\"], [\"lat\", 24], [\"long\", 54]], [[\"city\", \"Оман\"], [\"lat\", 21], [\"long\", 57]], [[\"city\", \"Пакистан\"], [\"lat\", 30], [\"long\", 70]], [[\"city\", \"Палау\"], [\"lat\", 7.503], [\"long\", 134.621002]], [[\"city\", \"Палестина\"], [\"lat\", 31.92157], [\"long\", 35.203289]], [[\"city\", \"Панама\"], [\"lat\", 8.9936], [\"long\", -79.51973]], [[\"city\", \"Папуа - Новая Гвинея\"], [\"lat\", -6], [\"long\", 147]], [[\"city\", \"Парагвай\"], [\"lat\", -22.99333], [\"long\", -57.996391]], [[\"city\", \"Перу\"], [\"lat\", -10], [\"long\", -76]], [[\"city\", \"Польша\"], [\"lat\", 52], [\"long\", 20]], [[\"city\", \"Португалия\"], [\"lat\", 38.726349], [\"long\", -9.14843]], [[\"city\", \"Руанда\"], [\"lat\", -2], [\"long\", 30]], [[\"city\", \"Румыния\"], [\"lat\", 46], [\"long\", 25]], [[\"city\", \"Сальвадор\"], [\"lat\", 13.83333], [\"long\", -88.916672]], [[\"city\", \"Самоа\"], [\"lat\", -13.8031], [\"long\", -172.178314]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.933331], [\"long\", 12.44639]], [[\"city\", \"Сан-Томе и Принсипи\"], [\"lat\", 1], [\"long\", 7]], [[\"city\", \"Саудовская Аравия\"], [\"lat\", 25], [\"long\", 45]], [[\"city\", \"Северная Корея\"], [\"lat\", 40], [\"long\", 127]], [[\"city\", \"Северная Македония\"], [\"lat\", 41.833328], [\"long\", 22]], [[\"city\", \"Сейшельские острова\"], [\"lat\", -4.58333], [\"long\", 55.666672]], [[\"city\", \"Сенегал\"], [\"lat\", 14], [\"long\", -14]], [[\"city\", \"Сент-Винсент и Гренадины\"], [\"lat\", 13.08333], [\"long\", -61.200001]], [[\"city\", \"Сент-Китс и Невис\"], [\"lat\", 17.33333], [\"long\", -62.75]], [[\"city\", \"Сент-Люсия\"], [\"lat\", 13.88333], [\"long\", -60.966671]], [[\"city\", \"Сербия\"], [\"lat\", 44.81892], [\"long\", 20.45998]], [[\"city\", \"Сингапур\"], [\"lat\", 1.36667], [\"long\", 103.800003]], [[\"city\", \"Сирия\"], [\"lat\", 35], [\"long\", 38]], [[\"city\", \"Словакия\"], [\"lat\", 48.666668], [\"long\", 17.1067]], [[\"city\", \"Словения\"], [\"lat\", 46.25], [\"long\", 15.16667]], [[\"city\", \"Соломоновы острова\"], [\"lat\", -8], [\"long\", 159]], [[\"city\", \"Сомали\"], [\"lat\", 6], [\"long\", 48]], [[\"city\", \"Судан\"], [\"lat\", 16], [\"long\", 30]], [[\"city\", \"Суринам\"], [\"lat\", 4], [\"long\", -56]], [[\"city\", \"США\"], [\"lat\", 39.759998], [\"long\", -98.5]], [[\"city\", \"Сьерра-Леоне\"], [\"lat\", 8.4840], [\"long\", -11.5]], [[\"city\", \"Таджикистан\"], [\"lat\", 39], [\"long\", 71]], [[\"city\", \"Таиланд\"], [\"lat\", 15], [\"long\", 100]], [[\"city\", \"Тайвань\"], [\"lat\", 24], [\"long\", 121]], [[\"city\", \"Танзания\"], [\"lat\", -6], [\"long\", 35]], [[\"city\", \"Того\"], [\"lat\", 8], [\"long\", 1.16667]], [[\"city\", \"Тонга\"], [\"lat\", -20], [\"long\", -175]], [[\"city\", \"Тринидад и Тобаго\"], [\"lat\", 11], [\"long\", -61]], [[\"city\", \"Тувалу\"], [\"lat\", -8.51719], [\"long\", 179.144775]], [[\"city\", \"Тунис\"], [\"lat\", 34], [\"long\", 9]], [[\"city\", \"Туркмения\"], [\"lat\", 40], [\"long\", 60]], [[\"city\", \"Турция\"], [\"lat\", 39.05901], [\"long\", 34.911549]], [[\"city\", \"Уганда\"], [\"lat\", 2], [\"long\", 33]], [[\"city\", \"Узбекистан\"], [\"lat\", 41.707539], [\"long\", 63.84911]], [[\"city\", \"Уругвай\"], [\"lat\", -33], [\"long\", -56]], [[\"city\", \"Фиджи\"], [\"lat\", -18], [\"long\", 178]], [[\"city\", \"Филиппины\"], [\"lat\", 13], [\"long\", 122]], [[\"city\", \"Финляндия\"], [\"lat\", 64], [\"long\", 26]], [[\"city\", \"Франция\"], [\"lat\", 46], [\"long\", 2]], [[\"city\", \"Хорватия\"], [\"lat\", 45.166672], [\"long\", 15.5]], [[\"city\", \"ЦАР\"], [\"lat\", 7], [\"long\", 21]], [[\"city\", \"Чад\"], [\"lat\", 15], [\"long\", 19]], [[\"city\", \"Черногория\"], [\"lat\", 42.5], [\"long\", 19.299999]], [[\"city\", \"Чехия\"], [\"lat\", 49.75], [\"long\", 15]], [[\"city\", \"Чили\"], [\"lat\", -30], [\"long\", -71]], [[\"city\", \"Швейцария\"], [\"lat\", 47.000156], [\"long\", 8.014269]], [[\"city\", \"Швеция\"], [\"lat\", 62], [\"long\", 15]], [[\"city\", \"Шри-Ланка\"], [\"lat\", 7], [\"long\", 81]], [[\"city\", \"Эквадор\"], [\"lat\", -2], [\"long\", -77.5]], [[\"city\", \"Экваториальная Гвинея\"], [\"lat\", 2], [\"long\", 10]], [[\"city\", \"Эритрея\"], [\"lat\", 15], [\"long\", 39]], [[\"city\", \"Эсватини (Свазиленд)\"], [\"lat\", -26.5], [\"long\", 31.133330]], [[\"city\", \"Эстония\"], [\"lat\", 59], [\"long\", 26]], [[\"city\", \"Эфиопия\"], [\"lat\", 8], [\"long\", 38]], [[\"city\", \"ЮАР\"], [\"lat\", -30], [\"long\", 26]], [[\"city\", \"Южная Корея\"], [\"lat\", 37], [\"long\", 127.5]], [[\"city\", \"Южный Судан\"], [\"lat\", 4.84023], [\"long\", 31.59428]], [[\"city\", \"Ямайка\"], [\"lat\", 18.25], [\"long\", -77.5]], [[\"city\", \"Япония\"], [\"lat\", 35.68536], [\"long\", 139.753098]]];\nconst arrCountryLeft = [[[\"city\", \"Австралия\"], [\"lat\", -35.5], [\"long\", 149]], [[\"city\", \"Австрия\"], [\"lat\", 47.333328], [\"long\", 13.33333]], [[\"city\", \"Азербайджан\"], [\"lat\", 40.5], [\"long\", 47.5]], [[\"city\", \"Албания\"], [\"lat\", 42.304482], [\"long\", 2.72135]], [[\"city\", \"Алжир\"], [\"lat\", 28], [\"long\", 3]], [[\"city\", \"Ангола\"], [\"lat\", -12.5], [\"long\", 13.23432]], [[\"city\", \"Андорра\"], [\"lat\", 42.5], [\"long\", 1.52109]], [[\"city\", \"Антигуа\"], [\"lat\", 17.049999], [\"long\", -61.799999]], [[\"city\", \"Аргентина\"], [\"lat\", -31.383329], [\"long\", -64.066673]], [[\"city\", \"Армения\"], [\"lat\", 40], [\"long\", 45]], [[\"city\", \"Афганистан\"], [\"lat\", 33], [\"long\", 66]], [[\"city\", \"Багамские острова\"], [\"lat\", 25.040819], [\"long\", -77.371223]], [[\"city\", \"Бангладеш\"], [\"lat\", 24], [\"long\", 90]], [[\"city\", \"Барбадос\"], [\"lat\", 13.16667], [\"long\", -59.533329]], [[\"city\", \"Бахрейн\"], [\"lat\", 26], [\"long\", 50.5]], [[\"city\", \"Белиз\"], [\"lat\", 17.25], [\"long\", -88.75]], [[\"city\", \"Белоруссия\"], [\"lat\", 53], [\"long\", 28]], [[\"city\", \"Бельгия\"], [\"lat\", 50.833328], [\"long\", 4]], [[\"city\", \"Бенин\"], [\"lat\", 6.49646], [\"long\", 2.60359]], [[\"city\", \"Болгария\"], [\"lat\", 43], [\"long\", 25]], [[\"city\", \"Боливия\"], [\"lat\", -17], [\"long\", -65]], [[\"city\", \"Босния и Герцеговина\"], [\"lat\", 44.25], [\"long\", 17.83333]], [[\"city\", \"Ботсвана\"], [\"lat\", -22], [\"long\", 24]], [[\"city\", \"Бразилия\"], [\"lat\", 39.523651], [\"long\", -87.125023]], [[\"city\", \"Бруней\"], [\"lat\", 4.94029], [\"long\", 114.666672]], [[\"city\", \"Буркина-Фасо\"], [\"lat\", 13], [\"long\", -2]], [[\"city\", \"Бурунди\"], [\"lat\", -3.5], [\"long\", 30]], [[\"city\", \"Бутан\"], [\"lat\", 27.4660], [\"long\", 90.5]], [[\"city\", \"Вануату\"], [\"lat\", -16], [\"long\", 167]], [[\"city\", \"Ватикан\"], [\"lat\", 41.902359], [\"long\", 12.45332]], [[\"city\", \"Великобритания\"], [\"lat\", 54.758438], [\"long\", -2.69531]], [[\"city\", \"Венгрия\"], [\"lat\", 47], [\"long\", 20]], [[\"city\", \"Венесуэла\"], [\"lat\", 8], [\"long\", -66]], [[\"city\", \"Восточный Тимор\"], [\"lat\", -8.83333], [\"long\", 125.75]], [[\"city\", \"Вьетнам\"], [\"lat\", 16.16667], [\"long\", 107.833328]], [[\"city\", \"Габон\"], [\"lat\", -1], [\"long\", 9.4535]], [[\"city\", \"Гаити\"], [\"lat\", 19], [\"long\", -72.416672]], [[\"city\", \"Гайана\"], [\"lat\", 5], [\"long\", -59]], [[\"city\", \"Гамбия\"], [\"lat\", 13.45274], [\"long\", -15.5]], [[\"city\", \"Гана\"], [\"lat\", 8], [\"long\", -2]], [[\"city\", \"Гватемала\"], [\"lat\", 14.6407], [\"long\", -90.25]], [[\"city\", \"Гвинея\"], [\"lat\", 11], [\"long\", -10]], [[\"city\", \"Гвинея-Бисау\"], [\"lat\", 12], [\"long\", -15]], [[\"city\", \"Германия\"], [\"lat\", 51.5], [\"long\", 13.41053]], [[\"city\", \"Гондурас\"], [\"lat\", 15], [\"long\", -86.5]], [[\"city\", \"Гренада\"], [\"lat\", 12.11667], [\"long\", -61.666672]], [[\"city\", \"Греция\"], [\"lat\", 38.352428], [\"long\", 23.13995]], [[\"city\", \"Грузия\"], [\"lat\", 42], [\"long\", 43.5]], [[\"city\", \"Дания\"], [\"lat\", 56], [\"long\", 10]], [[\"city\", \"Демократическая Республика Конго\"], [\"lat\", 0], [\"long\", 25]], [[\"city\", \"Джибути\"], [\"lat\", 11.5890], [\"long\", 42.5]], [[\"city\", \"Доминика\"], [\"lat\", 15.5], [\"long\", -61.333328]], [[\"city\", \"Доминиканская Республика\"], [\"lat\", 19], [\"long\", -70.666672]], [[\"city\", \"Египет\"], [\"lat\", 27], [\"long\", 30]], [[\"city\", \"Замбия\"], [\"lat\", -15], [\"long\", 30]], [[\"city\", \"Западная Сахара\"], [\"lat\", 27.162239], [\"long\", -13.20315]], [[\"city\", \"Зимбабве\"], [\"lat\", -19], [\"long\", 29]], [[\"city\", \"Израиль\"], [\"lat\", 31.5], [\"long\", 34.75]], [[\"city\", \"Индия\"], [\"lat\", 20], [\"long\", 77]], [[\"city\", \"Индонезия\"], [\"lat\", -5], [\"long\", 120]], [[\"city\", \"Иордания\"], [\"lat\", 31], [\"long\", 36]], [[\"city\", \"Ирак\"], [\"lat\", 33], [\"long\", 44]], [[\"city\", \"Иран\"], [\"lat\", 32], [\"long\", 53]], [[\"city\", \"Ирландия\"], [\"lat\", 53], [\"long\", -8]], [[\"city\", \"Исландия\"], [\"lat\", 65], [\"long\", -18]], [[\"city\", \"Испания\"], [\"lat\", 40], [\"long\", -4]], [[\"city\", \"Италия\"], [\"lat\", 43.698292], [\"long\", 10.39955]], [[\"city\", \"Йемен\"], [\"lat\", 15.5], [\"long\", 47.5]], [[\"city\", \"Кабо-Верде\"], [\"lat\", 16], [\"long\", -24]], [[\"city\", \"Казахстан\"], [\"lat\", 48], [\"long\", 68]], [[\"city\", \"Камбоджа\"], [\"lat\", 13], [\"long\", 105]], [[\"city\", \"Камерун\"], [\"lat\", 6], [\"long\", 12]], [[\"city\", \"Канада\"], [\"lat\", 60.108669], [\"long\", -113.642578]], [[\"city\", \"Катар\"], [\"lat\", 25.27932], [\"long\", 51.25]], [[\"city\", \"Кения\"], [\"lat\", 1], [\"long\", 38]], [[\"city\", \"Кипр\"], [\"lat\", 35], [\"long\", 33]], [[\"city\", \"Киргизия\"], [\"lat\", 41], [\"long\", 75]], [[\"city\", \"Кирибати\"], [\"lat\", 1.421], [\"long\", 172.983994]], [[\"city\", \"Китай\"], [\"lat\", 35], [\"long\", 105]], [[\"city\", \"Колумбия\"], [\"lat\", 4], [\"long\", -72]], [[\"city\", \"Коморские острова\"], [\"lat\", -12.23333], [\"long\", 44.44553]], [[\"city\", \"Конго\"], [\"lat\", -1], [\"long\", 15]], [[\"city\", \"Коста-Рика\"], [\"lat\", 10], [\"long\", -84]], [[\"city\", \"Кот-д'Ивуар\"], [\"lat\", 8], [\"long\", -5]], [[\"city\", \"Куба\"], [\"lat\", 22], [\"long\", -79.5]], [[\"city\", \"Кувейт\"], [\"lat\", 29.36972], [\"long\", 47.75]], [[\"city\", \"Лаос\"], [\"lat\", 20.34222], [\"long\", 104.344643]], [[\"city\", \"Латвия\"], [\"lat\", 57], [\"long\", 25]], [[\"city\", \"Лесото\"], [\"lat\", -29.5], [\"long\", 28.25]], [[\"city\", \"Либерия\"], [\"lat\", 6.30054], [\"long\", -9.5]], [[\"city\", \"Ливан\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Ливия\"], [\"lat\", 25], [\"long\", 17]], [[\"city\", \"Литва\"], [\"lat\", 56], [\"long\", 24]], [[\"city\", \"Лихтенштейн\"], [\"lat\", 47.166672], [\"long\", 9.53333]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 6.130]], [[\"city\", \"Маврикий\"], [\"lat\", -20.299999], [\"long\", 57.583328]], [[\"city\", \"Мавритания\"], [\"lat\", 20], [\"long\", -12]], [[\"city\", \"Мадагаскар\"], [\"lat\", -20], [\"long\", 47]], [[\"city\", \"Малави\"], [\"lat\", -13.5], [\"long\", 34]], [[\"city\", \"Малайзия\"], [\"lat\", 3.141200], [\"long\", 112.5]], [[\"city\", \"Мали\"], [\"lat\", 17], [\"long\", -4]], [[\"city\", \"Мальдивы\"], [\"lat\", 4.1748], [\"long\", 73]], [[\"city\", \"Мальта\"], [\"lat\", 35.916672], [\"long\", 14.43333]], [[\"city\", \"Марокко\"], [\"lat\", 32], [\"long\", -5]], [[\"city\", \"Маршалловы острова\"], [\"lat\", 7.113], [\"long\", 171.235992]], [[\"city\", \"Мексика\"], [\"lat\", 23], [\"long\", -102]], [[\"city\", \"Микронезия\"], [\"lat\", 6.924], [\"long\", 158.162003]], [[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]]];\nconst arrCityLeft = [[[\"city\", \"Ногинск\"], [\"lat\", 55.52], [\"long\", 38.29]], [[\"city\", \"Новокуйбышевск\"], [\"lat\", 53.6], [\"long\", 49.53]], [[\"city\", \"Великие Луки\"], [\"lat\", 56.2], [\"long\", 30.31]], [[\"city\", \"Нефтекамск\"], [\"lat\", 56.7], [\"long\", 54.16]], [[\"city\", \"Магадан\"], [\"lat\", 59.34], [\"long\", 150.47]], [[\"city\", \"Октябрьский\"], [\"lat\", 54.28], [\"long\", 53.28]], [[\"city\", \"Ленинск-Кузнецкий\"], [\"lat\", 54.4], [\"long\", 86.1]], [[\"city\", \"Сергиев Посад\"], [\"lat\", 56.19], [\"long\", 38.8]], [[\"city\", \"Арзамас\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Новотроицк\"], [\"lat\", 51.13], [\"long\", 58.21]], [[\"city\", \"Киселёвск\"], [\"lat\", 53.59], [\"long\", 86.39]], [[\"city\", \"Глазов\"], [\"lat\", 58.8], [\"long\", 52.38]], [[\"city\", \"Канск\"], [\"lat\", 56.13], [\"long\", 95.43]], [[\"city\", \"Соликамск\"], [\"lat\", 59.38], [\"long\", 56.46]], [[\"city\", \"Элиста\"], [\"lat\", 46.19], [\"long\", 44.13]], [[\"city\", \"Сарапул\"], [\"lat\", 56.28], [\"long\", 53.48]], [[\"city\", \"Междуреченск\"], [\"lat\", 53.41], [\"long\", 88.5]], [[\"city\", \"Щёлково\"], [\"lat\", 55.54], [\"long\", 38.1]], [[\"city\", \"Усть-Илимск\"], [\"lat\", 58], [\"long\", 102.4]], [[\"city\", \"Кызыл\"], [\"lat\", 51.43], [\"long\", 94.23]], [[\"city\", \"Усолье-Сибирское\"], [\"lat\", 52.46], [\"long\", 103.38]], [[\"city\", \"Воткинск\"], [\"lat\", 57.3], [\"long\", 53.59]], [[\"city\", \"Новошахтинск\"], [\"lat\", 47.46], [\"long\", 39.56]], [[\"city\", \"Железнодорожный\"], [\"lat\", 55.45], [\"long\", 38.8]], [[\"city\", \"Ессентуки\"], [\"lat\", 44.2], [\"long\", 42.51]], [[\"city\", \"Зеленодольск\"], [\"lat\", 55.5], [\"long\", 48.4]], [[\"city\", \"Серов\"], [\"lat\", 59.37], [\"long\", 60.35]], [[\"city\", \"Кинешма\"], [\"lat\", 57.27], [\"long\", 42.8]], [[\"city\", \"Тобольск\"], [\"lat\", 58.11], [\"long\", 68.14]], [[\"city\", \"Ноябрьск\"], [\"lat\", 63.1], [\"long\", 75.37]], [[\"city\", \"Балашов\"], [\"lat\", 51.32], [\"long\", 43.1]], [[\"city\", \"Железногорск\"], [\"lat\", 52.21], [\"long\", 35.25]], [[\"city\", \"Кузнецк\"], [\"lat\", 53.7], [\"long\", 46.34]], [[\"city\", \"Батайск\"], [\"lat\", 47.8], [\"long\", 39.45]], [[\"city\", \"Дербент\"], [\"lat\", 42.4], [\"long\", 48.17]], [[\"city\", \"Нефтеюганск\"], [\"lat\", 55.6], [\"long\", 54.17]], [[\"city\", \"Жуковский\"], [\"lat\", 55.33], [\"long\", 38.15]], [[\"city\", \"Ухта\"], [\"lat\", 63.34], [\"long\", 53.43]], [[\"city\", \"Анжеро-Судженск\"], [\"lat\", 56.5], [\"long\", 86.1]], [[\"city\", \"Бугульма\"], [\"lat\", 54.32], [\"long\", 52.48]], [[\"city\", \"Новоуральск\"], [\"lat\", 57.15], [\"long\", 59.48]], [[\"city\", \"Красногорск\"], [\"lat\", 55.5], [\"long\", 37.2]], [[\"city\", \"Чайковский\"], [\"lat\", 56.46], [\"long\", 54.5]], [[\"city\", \"Новый Уренгой\"], [\"lat\", 66.5], [\"long\", 76.31]], [[\"city\", \"Губкинский\"], [\"lat\", 64.26], [\"long\", 76.29]], [[\"city\", \"Кирово-Чепецк\"], [\"lat\", 58.33], [\"long\", 50.2]], [[\"city\", \"Клин\"], [\"lat\", 56.2], [\"long\", 36.42]], [[\"city\", \"Хасавюрт\"], [\"lat\", 43.15], [\"long\", 46.35]], [[\"city\", \"Раменское\"], [\"lat\", 55.29], [\"long\", 38.21]], [[\"city\", \"Губкин\"], [\"lat\", 51.17], [\"long\", 37.23]], [[\"city\", \"Озёрск\"], [\"lat\", 55.46], [\"long\", 60.42]], [[\"city\", \"Пушкин\"], [\"lat\", 59.46], [\"long\", 30.19]], [[\"city\", \"Ейск\"], [\"lat\", 46.42], [\"long\", 38.16]], [[\"city\", \"Бузулук\"], [\"lat\", 52.47], [\"long\", 52.16]], [[\"city\", \"Шадринск\"], [\"lat\", 56.5], [\"long\", 63.37]], [[\"city\", \"Бердск\"], [\"lat\", 54.46], [\"long\", 83.5]], [[\"city\", \"Троицк\"], [\"lat\", 54.7], [\"long\", 61.34]], [[\"city\", \"Воркута\"], [\"lat\", 67.31], [\"long\", 64.2]], [[\"city\", \"Юрга\"], [\"lat\", 55.44], [\"long\", 84.55]], [[\"city\", \"Кропоткин\"], [\"lat\", 45.26], [\"long\", 40.34]], [[\"city\", \"Свободный\"], [\"lat\", 51.23], [\"long\", 128.8]], [[\"city\", \"Каменск-Шахтинский\"], [\"lat\", 48.19], [\"long\", 40.15]], [[\"city\", \"Ишимбай\"], [\"lat\", 53.27], [\"long\", 56.3]], [[\"city\", \"Реутов\"], [\"lat\", 55.46], [\"long\", 37.52]], [[\"city\", \"Каспийск\"], [\"lat\", 42.53], [\"long\", 47.38]], [[\"city\", \"Егорьевск\"], [\"lat\", 55.23], [\"long\", 39.2]], [[\"city\", \"Гусь-Хрустальный\"], [\"lat\", 55.37], [\"long\", 40.39]], [[\"city\", \"Копейск\"], [\"lat\", 55.8], [\"long\", 61.39]], [[\"city\", \"Белорецк\"], [\"lat\", 53.58], [\"long\", 58.24]], [[\"city\", \"Белогорск\"], [\"lat\", 50.55], [\"long\", 128.28]], [[\"city\", \"Лысьва\"], [\"lat\", 58.7], [\"long\", 57.47]], [[\"city\", \"Кунгур\"], [\"lat\", 57.26], [\"long\", 56.56]], [[\"city\", \"Минеральные Воды\"], [\"lat\", 44.13], [\"long\", 43.8]], [[\"city\", \"Биробиджан\"], [\"lat\", 48.48], [\"long\", 132.55]], [[\"city\", \"Черногорск\"], [\"lat\", 53.5], [\"long\", 91.13]], [[\"city\", \"Воскресенск\"], [\"lat\", 55.19], [\"long\", 38.42]], [[\"city\", \"Белово\"], [\"lat\", 54.25], [\"long\", 86.17]], [[\"city\", \"Выборг\"], [\"lat\", 60.43], [\"long\", 28.46]], [[\"city\", \"Асбест\"], [\"lat\", 57.1], [\"long\", 61.28]], [[\"city\", \"Азов\"], [\"lat\", 47.6], [\"long\", 39.26]], [[\"city\", \"Гатчина\"], [\"lat\", 59.34], [\"long\", 30.6]], [[\"city\", \"Петергоф\"], [\"lat\", 59.53], [\"long\", 29.54]], [[\"city\", \"Чапаевск\"], [\"lat\", 52.58], [\"long\", 49.41]], [[\"city\", \"Саров\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Нижний Новгород\"], [\"lat\", 56], [\"long\", null]], [[\"city\", \"Гуково\"], [\"lat\", 48.4], [\"long\", 39.56]], [[\"city\", \"Павловский Посад\"], [\"lat\", 55.46], [\"long\", 38.4]], [[\"city\", \"Артем\"], [\"lat\", 43.22], [\"long\", 132.11]], [[\"city\", \"Шуя\"], [\"lat\", 56.52], [\"long\", 41.21]], [[\"city\", \"Ступино\"], [\"lat\", 54.53], [\"long\", 38.7]], [[\"city\", \"Апатиты\"], [\"lat\", 67.34], [\"long\", 33.23]], [[\"city\", \"Арсеньев\"], [\"lat\", 44.1], [\"long\", 133.17]], [[\"city\", \"Ревда\"], [\"lat\", 56.49], [\"long\", 59.57]], [[\"city\", \"Борисоглебск\"], [\"lat\", 51.22], [\"long\", 42.5]], [[\"city\", \"Котлас\"], [\"lat\", 61.16], [\"long\", 46.39]], [[\"city\", \"Лабинск\"], [\"lat\", 44.38], [\"long\", 40.43]], [[\"city\", \"Славянск-на-Кубани\"], [\"lat\", 45.15], [\"long\", 38.7]], [[\"city\", \"Краснотурьинск\"], [\"lat\", 59.47], [\"long\", 60.29]], [[\"city\", \"Будённовск\"], [\"lat\", 44.47], [\"long\", 44.8]], [[\"city\", \"Россошь\"], [\"lat\", 50.13], [\"long\", 39.35]], [[\"city\", \"Туймазы\"], [\"lat\", 54.36], [\"long\", 53.42]], [[\"city\", \"Сальск\"], [\"lat\", 46.28], [\"long\", 41.32]], [[\"city\", \"Дмитров\"], [\"lat\", 56.21], [\"long\", 37.32]], [[\"city\", \"Щёкино\"], [\"lat\", 54.1], [\"long\", 37.31]], [[\"city\", \"Мелеуз\"], [\"lat\", 52.58], [\"long\", 55.56]], [[\"city\", \"Заречный\"], [\"lat\", 53.8], [\"long\", 46.35]], [[\"city\", \"Бор\"], [\"lat\", 56.21], [\"long\", 44.5]], [[\"city\", \"Ишим\"], [\"lat\", 56.7], [\"long\", 69.28]], [[\"city\", \"Назарово\"], [\"lat\", 56.1], [\"long\", 90.23]], [[\"city\", \"Выкса\"], [\"lat\", 55.19], [\"long\", 42.1]], [[\"city\", \"Балахна\"], [\"lat\", 56.29], [\"long\", 43.38]], [[\"city\", \"Талнах\"], [\"lat\", 69.3], [\"long\", 88.27]], [[\"city\", \"Волжск\"], [\"lat\", 55.51], [\"long\", 48.31]], [[\"city\", \"Белебей\"], [\"lat\", 54.7], [\"long\", 54.7]], [[\"city\", \"Боровичи\"], [\"lat\", 58.24], [\"long\", 33.54]], [[\"city\", \"Крымск\"], [\"lat\", 44.56], [\"long\", 37.58]], [[\"city\", \"Новоалтайск\"], [\"lat\", 53.24], [\"long\", 83.56]], [[\"city\", \"Сибай\"], [\"lat\", 52.43], [\"long\", 58.4]], [[\"city\", \"Нягань\"], [\"lat\", 62.9], [\"long\", 65.23]], [[\"city\", \"Осинники\"], [\"lat\", 53.37], [\"long\", 87.2]], [[\"city\", \"Отрадный\"], [\"lat\", 53.2], [\"long\", 51.22]], [[\"city\", \"Тулун\"], [\"lat\", 54.34], [\"long\", 100.34]], [[\"city\", \"Верхняя Салда\"], [\"lat\", 58.4], [\"long\", 60.33]], [[\"city\", \"Амурск\"], [\"lat\", 50.14], [\"long\", 136.53]], [[\"city\", \"Рузаевка\"], [\"lat\", 54.4], [\"long\", 44.57]], [[\"city\", \"Чебаркуль\"], [\"lat\", 54.59], [\"long\", 60.22]], [[\"city\", \"Берёзовский\"], [\"lat\", 55.4], [\"long\", 86.16]], [[\"city\", \"Сатка\"], [\"lat\", 55.2], [\"long\", 59.2]], [[\"city\", \"Инта\"], [\"lat\", 66.2], [\"long\", 60.1]], [[\"city\", \"Можга\"], [\"lat\", 56.27], [\"long\", 52.11]], [[\"city\", \"Радужный\"], [\"lat\", 62.5], [\"long\", 77.14]], [[\"city\", \"Лесозаводск\"], [\"lat\", 45.29], [\"long\", 133.25]], [[\"city\", \"Красноуфимск\"], [\"lat\", 56.37], [\"long\", 57.45]], [[\"city\", \"Каменка\"], [\"lat\", 53.11], [\"long\", 44.2]], [[\"city\", \"Мыски\"], [\"lat\", 53.44], [\"long\", 87.47]]]\nconst arrCityRight = [[[\"city\", \"Москва\"], [\"lat\", 55.45], [\"long\", 37.37]], [[\"city\", \"Санкт-Петербург\"], [\"lat\", 59.56], [\"long\", 30.19]], [[\"city\", \"Новосибирск\"], [\"lat\", 55.1], [\"long\", 82.56]], [[\"city\", \"Екатеринбург\"], [\"lat\", 56.51], [\"long\", 60.36]], [[\"city\", \"Самара\"], [\"lat\", 53.14], [\"long\", 50.1]], [[\"city\", \"Омск\"], [\"lat\", 54.59], [\"long\", 73.22]], [[\"city\", \"Казань\"], [\"lat\", 55.47], [\"long\", 49.1]], [[\"city\", \"Уфа\"], [\"lat\", 54.49], [\"long\", 56.4]], [[\"city\", \"Челябинск\"], [\"lat\", 55.9], [\"long\", 61.26]], [[\"city\", \"Ростов-на-Дону\"], [\"lat\", 47.14], [\"long\", 39.42]], [[\"city\", \"Пермь\"], [\"lat\", 58], [\"long\", 56.14]], [[\"city\", \"Волгоград\"], [\"lat\", 48.43], [\"long\", 44.29]], [[\"city\", \"Воронеж\"], [\"lat\", 51.43], [\"long\", 39.16]], [[\"city\", \"Красноярск\"], [\"lat\", 56.1], [\"long\", 93.4]], [[\"city\", \"Саратов\"], [\"lat\", 51.33], [\"long\", 46]], [[\"city\", \"Тольятти\"], [\"lat\", 53.29], [\"long\", 49.31]], [[\"city\", \"Ульяновск\"], [\"lat\", 54.19], [\"long\", 48.22]], [[\"city\", \"Ижевск\"], [\"lat\", 56.5], [\"long\", 53.11]], [[\"city\", \"Краснодар\"], [\"lat\", 45.2], [\"long\", 38.58]], [[\"city\", \"Ярославль\"], [\"lat\", 57.37], [\"long\", 39.51]], [[\"city\", \"Хабаровск\"], [\"lat\", 48.25], [\"long\", 135.7]], [[\"city\", \"Владивосток\"], [\"lat\", 43.8], [\"long\", 131.54]], [[\"city\", \"Иркутск\"], [\"lat\", 52.2], [\"long\", 104.14]], [[\"city\", \"Барнаул\"], [\"lat\", 53.21], [\"long\", 83.45]], [[\"city\", \"Новокузнецк\"], [\"lat\", 53.45], [\"long\", 87.7]], [[\"city\", \"Липецк\"], [\"lat\", 52.37], [\"long\", 39.37]], [[\"city\", \"Пенза\"], [\"lat\", 53.12], [\"long\", 45]], [[\"city\", \"Рязань\"], [\"lat\", 54.36], [\"long\", 39.42]], [[\"city\", \"Оренбург\"], [\"lat\", 51.47], [\"long\", 55.6]], [[\"city\", \"Набережные Челны\"], [\"lat\", 55.41], [\"long\", 52.19]], [[\"city\", \"Тюмень\"], [\"lat\", 57.1], [\"long\", 65.3]], [[\"city\", \"Тула\"], [\"lat\", 54.13], [\"long\", 37.36]], [[\"city\", \"Кемерово\"], [\"lat\", 55.25], [\"long\", 86.5]], [[\"city\", \"Астрахань\"], [\"lat\", 46.22], [\"long\", 48.5]], [[\"city\", \"Томск\"], [\"lat\", 56.29], [\"long\", 84.59]], [[\"city\", \"Киров\"], [\"lat\", 58.36], [\"long\", 49.39]], [[\"city\", \"Чебоксары\"], [\"lat\", 56.13222], [\"long\", 47.14]], [[\"city\", \"Брянск\"], [\"lat\", 53.16], [\"long\", 34.25]], [[\"city\", \"Иваново\"], [\"lat\", 57.1], [\"long\", 40.59]], [[\"city\", \"Тверь\"], [\"lat\", 56.52], [\"long\", 35.55]], [[\"city\", \"Курск\"], [\"lat\", 51.44], [\"long\", 36.11]], [[\"city\", \"Магнитогорск\"], [\"lat\", 53.25], [\"long\", 58.58]], [[\"city\", \"Калининград\"], [\"lat\", 54.43], [\"long\", 20.31]], [[\"city\", \"Нижний Тагил\"], [\"lat\", 57.56], [\"long\", 60.1]], [[\"city\", \"Улан-Удэ\"], [\"lat\", 51.5], [\"long\", 107.36]], [[\"city\", \"Сочи\"], [\"lat\", 43.35], [\"long\", 39.44]], [[\"city\", \"Курган\"], [\"lat\", 55.26], [\"long\", 65.19]], [[\"city\", \"Мурманск\"], [\"lat\", 68.58], [\"long\", 33.5]], [[\"city\", \"Архангельск\"], [\"lat\", 64.32], [\"long\", 40.32]], [[\"city\", \"Смоленск\"], [\"lat\", 54.47], [\"long\", 32.3]], [[\"city\", \"Белгород\"], [\"lat\", 50.37], [\"long\", 36.35]], [[\"city\", \"Ставрополь\"], [\"lat\", 45.3], [\"long\", 41.58]], [[\"city\", \"Орел\"], [\"lat\", 52.58], [\"long\", 36.4]], [[\"city\", \"Калуга\"], [\"lat\", 54.32], [\"long\", 36.17]], [[\"city\", \"Владимир\"], [\"lat\", 56.9], [\"long\", 40.25]], [[\"city\", \"Махачкала\"], [\"lat\", 42.59], [\"long\", 47.31]], [[\"city\", \"Череповец\"], [\"lat\", 59.8], [\"long\", 37.55]], [[\"city\", \"Владикавказ\"], [\"lat\", 43.2], [\"long\", 44.4]], [[\"city\", \"Саранск\"], [\"lat\", 54.11], [\"long\", 45.1]], [[\"city\", \"Тамбов\"], [\"lat\", 52.43], [\"long\", 41.25]], [[\"city\", \"Чита\"], [\"lat\", 52.3], [\"long\", 113.28]], [[\"city\", \"Вологда\"], [\"lat\", 59.14], [\"long\", 39.54]], [[\"city\", \"Кострома\"], [\"lat\", 57.46], [\"long\", 40.56]], [[\"city\", \"Комсомольск-на-Амуре\"], [\"lat\", 50.34], [\"long\", 137]], [[\"city\", \"Волжский\"], [\"lat\", 48.49], [\"long\", 44.44]], [[\"city\", \"Таганрог\"], [\"lat\", 47.14], [\"long\", 38.54]], [[\"city\", \"Петрозаводск\"], [\"lat\", 61.47], [\"long\", 34.2]], [[\"city\", \"Братск\"], [\"lat\", 56.18], [\"long\", 101.43]], [[\"city\", \"Сургут\"], [\"lat\", 61.15], [\"long\", 73.23]], [[\"city\", \"Дзержинск\"], [\"lat\", 56.16], [\"long\", 43.24]], [[\"city\", \"Орск\"], [\"lat\", 51.13], [\"long\", 58.38]], [[\"city\", \"Стерлитамак\"], [\"lat\", 53.38], [\"long\", 55.57]], [[\"city\", \"Ангарск\"], [\"lat\", 52.34], [\"long\", 103.55]], [[\"city\", \"Йошкар-Ола\"], [\"lat\", 56.38], [\"long\", 47.52]], [[\"city\", \"Рыбинск\"], [\"lat\", 58.3], [\"long\", 38.5]], [[\"city\", \"Прокопьевск\"], [\"lat\", 53.54], [\"long\", 86.43]], [[\"city\", \"Нижневартовск\"], [\"lat\", 60.56], [\"long\", 76.32]], [[\"city\", \"Великий Новгород\"], [\"lat\", 58.32], [\"long\", 31.16]], [[\"city\", \"Сыктывкар\"], [\"lat\", 61.4], [\"long\", 50.49]], [[\"city\", \"Нижнекамск\"], [\"lat\", 55.38], [\"long\", 51.47]], [[\"city\", \"Бийск\"], [\"lat\", 52.32], [\"long\", 85.1]], [[\"city\", \"Благовещенск\"], [\"lat\", 50.17], [\"long\", 127.32]], [[\"city\", \"Северодвинск\"], [\"lat\", 64.34], [\"long\", 39.49]], [[\"city\", \"Шахты\"], [\"lat\", 47.41], [\"long\", 40.15]], [[\"city\", \"Старый Оскол\"], [\"lat\", 51.18], [\"long\", 37.5]], [[\"city\", \"Зеленоград\"], [\"lat\", 55.56], [\"long\", 37.17]], [[\"city\", \"Новороссийск\"], [\"lat\", 44.43], [\"long\", 37.46]], [[\"city\", \"Балаково\"], [\"lat\", 52], [\"long\", 47.47]], [[\"city\", \"Псков\"], [\"lat\", 57.49], [\"long\", 28.2]], [[\"city\", \"Златоуст\"], [\"lat\", 55.11], [\"long\", 59.38]], [[\"city\", \"Якутск\"], [\"lat\", 62.1], [\"long\", 129.5]], [[\"city\", \"Подольск\"], [\"lat\", 55.26], [\"long\", 37.34]], [[\"city\", \"Энгельс\"], [\"lat\", 51.29], [\"long\", 46.8]], [[\"city\", \"Сызрань\"], [\"lat\", 53.1], [\"long\", 48.27]], [[\"city\", \"Каменск-Уральский\"], [\"lat\", 56.25], [\"long\", 61.56]], [[\"city\", \"Петропавловск-Камчатский\"], [\"lat\", 53.2], [\"long\", 158.38]], [[\"city\", \"Новочеркасск\"], [\"lat\", 47.25], [\"long\", 40.5]], [[\"city\", \"Березники\"], [\"lat\", 59.25], [\"long\", 56.46]], [[\"city\", \"Южно-Сахалинск\"], [\"lat\", 46.58], [\"long\", 142.44]], [[\"city\", \"Волгодонск\"], [\"lat\", 47.31], [\"long\", 42.8]], [[\"city\", \"Абакан\"], [\"lat\", 53.44], [\"long\", 91.26]], [[\"city\", \"Обнинск\"], [\"lat\", 55.6], [\"long\", 36.37]], [[\"city\", \"Майкоп\"], [\"lat\", 44.37], [\"long\", 40.5]], [[\"city\", \"Армавир\"], [\"lat\", 44.59], [\"long\", 41.8]], [[\"city\", \"Миасс\"], [\"lat\", 55], [\"long\", 60.5]], [[\"city\", \"Люберцы\"], [\"lat\", 55.67719], [\"long\", 37.89322]], [[\"city\", \"Рубцовск\"], [\"lat\", 51.32], [\"long\", 81.12]], [[\"city\", \"Ковров\"], [\"lat\", 56.22], [\"long\", 41.2]], [[\"city\", \"Салават\"], [\"lat\", 53.24], [\"long\", 55.53]], [[\"city\", \"Мытищи\"], [\"lat\", 55.54], [\"long\", 37.45]], [[\"city\", \"Находка\"], [\"lat\", 42.49], [\"long\", 132.53]], [[\"city\", \"Уссурийск\"], [\"lat\", 43.49], [\"long\", 131.58]], [[\"city\", \"Коломна\"], [\"lat\", 55.5], [\"long\", 38.47]], [[\"city\", \"Электросталь\"], [\"lat\", 55.46], [\"long\", 38.28]], [[\"city\", \"Колпино\"], [\"lat\", 59.45], [\"long\", 30.36]], [[\"city\", \"Альметьевск\"], [\"lat\", 54.54], [\"long\", 52.19]], [[\"city\", \"Муром\"], [\"lat\", 55.34], [\"long\", 42.2]], [[\"city\", \"Димитровград\"], [\"lat\", 54.14], [\"long\", 49.35]], [[\"city\", \"Новомосковск\"], [\"lat\", 54.5], [\"long\", 38.11]], [[\"city\", \"Первоуральск\"], [\"lat\", 56.55], [\"long\", 59.57]], [[\"city\", \"Норильск\"], [\"lat\", 69.19], [\"long\", 88.11]], [[\"city\", \"Пятигорск\"], [\"lat\", 44.2], [\"long\", 43.4]], [[\"city\", \"Невинномысск\"], [\"lat\", 44.38], [\"long\", 41.56]], [[\"city\", \"Химки\"], [\"lat\", 55.53], [\"long\", 37.26]], [[\"city\", \"Балашиха\"], [\"lat\", 55.5], [\"long\", 37.57]], [[\"city\", \"Королёв\"], [\"lat\", 55.55], [\"long\", 37.49]], [[\"city\", \"Серпухов\"], [\"lat\", 54.55], [\"long\", 37.26]], [[\"city\", \"Одинцово\"], [\"lat\", 55.4], [\"long\", 37.17]], [[\"city\", \"Орехово-Зуево\"], [\"lat\", 55.48], [\"long\", 38.58]], [[\"city\", \"Грозный\"], [\"lat\", 43.19], [\"long\", 45.41]], [[\"city\", \"Камышин\"], [\"lat\", 50.6], [\"long\", 45.24]], [[\"city\", \"Кисловодск\"], [\"lat\", 43.54], [\"long\", 42.43]], [[\"city\", \"Новочебоксарск\"], [\"lat\", 56.7], [\"long\", 47.29]], [[\"city\", \"Черкесск\"], [\"lat\", 44.17], [\"long\", 42.4]], [[\"city\", \"Ачинск\"], [\"lat\", 56.16], [\"long\", 90.29]], [[\"city\", \"Северск\"], [\"lat\", 56.37], [\"long\", 84.52]], [[\"city\", \"Назрань\"], [\"lat\", 43.13], [\"long\", 44.48]], [[\"city\", \"Елец\"], [\"lat\", 52.36], [\"long\", 38.31]], [[\"city\", \"Мичуринск\"], [\"lat\", 52.54], [\"long\", 40.28]], [[\"city\", \"Ногинск\"], [\"lat\", 55.52], [\"long\", 38.29]]]\nconst App = () => {\n\n\tconst [activePanel, setActivePanel] = useState(\"Loader\");\n\tconst [history, setHistory] = useState(['Home']);\n\tconst [scheme, SetStateScheme] = useState('space_gray');\n\tconst [position, setStatePosition] = useState();\n\tconst [geolocation, setStateGeolocation] = useState();\n\tconst [left, setStateLeft] = useState(arrCityLeft)\n\tconst [right, setStateRight] = useState(arrCityRight)\n\tconst [chooseLevel, setStateChooseLevel] = useState('Города')\n\tconst [title, setStateTitle] = useState(<h1>Какой город <br /> ближе?</h1>)\n\n\tconst changeLevel = () => {\n\n\t\tif (right === arrAllRight) {\n\t\t\tsetStateRight(arrCityRight)\n\t\t\tsetStateLeft(arrCityLeft)\n\t\t\tsetStateChooseLevel('Города')\n\t\t\tsetStateTitle(<h1>Какой город <br /> ближе?</h1>)\n\n\t\t} else {\n\t\t\tif (right === arrCityRight) {\n\t\t\t\tsetStateRight(arrCountryRight)\n\t\t\t\tsetStateLeft(arrCountryLeft)\n\t\t\t\tsetStateChooseLevel('Страны')\n\t\t\t\tsetStateTitle(<h1>Какая страна <br /> ближе?</h1>)\n\t\t\t}\n\t\t\tif (right === arrCountryRight) {\n\t\t\t\tsetStateRight(arrGeoRight)\n\t\t\t\tsetStateLeft(arrGeoLeft)\n\t\t\t\tsetStateChooseLevel('Столицы')\n\t\t\t\tsetStateTitle(<h1>Какая столица <br /> ближе?</h1>)\n\t\t\t}\n\t\t\tif (right === arrGeoRight) {\n\t\t\t\tsetStateRight(arrAllRight)\n\t\t\t\tsetStateLeft(arrAllLeft)\n\t\t\t\tsetStateChooseLevel('Смешанно')\n\t\t\t\tsetStateTitle(<h1>Какой географический <br /> объект ближе?</h1>)\n\t\t\t}\n\n\t\t}\n\n\n\n\t}\n\n\n\tfunction goToPage(name) {\n\n\t\twindow.history.pushState({ panel: name }, name);\n\t\tsetActivePanel(name);\n\t\thistory.push(name);\n\t};\n\n\tconst goBack = () => {\n\t\tclosePopout()\n\t\tif (history.length === 1) {\n\t\t\tbridge.send(\"VKWebAppClose\", { \"status\": \"success\" });\n\t\t} else if (history.length > 1) {\n\t\t\thistory.pop()\n\t\t\tsetActivePanel(history[history.length - 1])\n\t\t}\n\t}\n\n\tconst goToHome = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetActivePanel('Home')\n\t\t}, 500);\n\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"animation\"] })\n\t\t\t.then(data => {\n\t\t\t\tif (data.keys[0].value === 'true') {\n\t\t\t\t\tsetAnimationButIcon(<Icon28DoneOutline />)\n\n\t\t\t\t\tsetAnimation(false)\n\t\t\t\t\tsetTextButton('Включить анимацию')\n\t\t\t\t}\n\t\t\t\tif (data.keys[0].value === 'false') {\n\t\t\t\t\tsetAnimation(true)\n\t\t\t\t\tsetAnimationButIcon(<Icon28CancelOutline />)\n\n\t\t\t\t\tsetTextButton('Отключить анимацию')\n\t\t\t\t}\n\t\t\t\tif (data.keys[0].value === '') {\n\t\t\t\t\tsetAnimationButIcon(<Icon28CancelOutline />)\n\n\t\t\t\t\tsetAnimation(true)\n\t\t\t\t\tsetTextButton('Отключить анимацию')\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.log(e);\n\t\t\t})\n\t}\n\tconst goToIntro = () => {\n\t\tsetActivePanel('Intro')\n\t}\n\tconst goToError = () => {\n\t\tsetActivePanel('Error')\n\t}\n\tconst goToLoader = () => {\n\t\tsetActivePanel('Loader')\n\t}\n\n\tfunction camelCase(scheme, needChange = false) {\n\t\tlet isLight = lights.includes(scheme);\n\n\t\tif (needChange) {\n\t\t\tisLight = !isLight;\n\t\t}\n\t\tSetStateScheme(isLight ? 'bright_light' : 'space_gray');\n\n\t\tbridge.send('VKWebAppSetViewSettings', {\n\t\t\t'status_bar_style': isLight ? 'dark' : 'light',\n\t\t\t'action_bar_color': isLight ? '#ffffff' : '#191919'\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\n\n\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"geo\", \"pos\"] })\n\t\t\t.then(data => {\n\n\n\n\t\t\t\tsetStatePosition(data.keys[1].value)\n\t\t\t\tsetStateGeolocation(data.keys[0].value)\n\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.log(e);\n\t\t\t})\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('popstate', () => goBack());\n\n\n\n\t}, []);\n\n\n\tconst savePositionGlobal = (pos, geo) => {\n\t\tsetStatePosition(pos)\n\t\tconsole.log(pos);\n\t\tsetStateGeolocation(geo)\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"pos\", \"value\": pos });\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"geo\", \"value\": geo });\n\t}\n\n\n\n\tconst [snackbar, setSnackbar] = useState(null)\n\n\tconst [popoutStatus, setpopoutStatus] = useState(null)\n\tconst [alertText, setAlertText] = useState('Топ дня')\n\tconst [alert, setAlert] = useState(false)\n\tconst shareResult = (score) => {\n\t\tsetAlert(true)\n\t\tsetAlertText('Поделиться')\n\t\tbridge.send(\"VKWebAppGetClientVersion\")\n\t\t.then (data => {\n\t\t\tif (data.platform === 'mobile-web') {\n\t\t\t\tsetpopoutStatus(<Alert transparent\n\t\t\t\t\tstyle={{ textAlign: 'center' }}\n\t\t\t\t\tactionsLayout=\"vertical\"\n\t\t\t\t\tactions={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Добавить в историю',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'default',\n\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowStoryBox\", {\n\t\t\t\t\t\t\t\t\t\"background_type\": \"image\",\n\t\t\t\t\t\t\t\t\t\"url\": \"https://i.ibb.co/D1zGSvy/3223.png\",\n\t\t\t\t\t\t\t\t\t\"stickers\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"sticker_type\": \"renderable\",\n\t\t\t\t\t\t\t\t\t\t\t\"sticker\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"can_delete\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"content_type\": \"image\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"url\": \"https://i.ibb.co/crkhKQb/234423.png\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"clickable_zones\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"action_type\": \"link\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"action\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"link\": \"https://vk.com/app7612376\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"tooltip_text_key\": \"tooltip_open_default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"clickable_area\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 206,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 206,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 94\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 94\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t, {\n\t\t\t\t\t\t\ttitle: 'Опубликовать на стене',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'default',\n\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\tscore > 0 ? (\n\t\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowWallPostBox\", { \"message\": 'У меня отгадано ' + `${score}` + ' км в игре [https://vk.com/app7612376|Towner], попробуй обойти меня!' })\n\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowWallPostBox\", { \"message\": 'Насколько ты хорошо знаешь географию? Проверь свои знания в игре - [https://vk.com/app7612376|Towner]!' })\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ttitle: 'Отмена',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'cancel'\n\t\t\t\t\t\t}]}\n\t\t\t\t\tonClose={() => closePopout()}\n\t\t\t\t>\n\t\t\t\t\t<h2>Выберите</h2>\n\n\t\t\t\t</Alert>)\n\t\t\t} else {\n\t\t\t\tsetpopoutStatus(<Alert transparent\n\t\t\t\t\tstyle={{ textAlign: 'center' }}\n\t\t\t\t\tactionsLayout=\"vertical\"\n\t\t\t\t\tactions={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Добавить в историю',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'default',\n\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowStoryBox\", {\n\t\t\t\t\t\t\t\t\t\"background_type\": \"image\",\n\t\t\t\t\t\t\t\t\t\"url\": \"https://i.ibb.co/D1zGSvy/3223.png\",\n\t\t\t\t\t\t\t\t\t\"stickers\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"sticker_type\": \"renderable\",\n\t\t\t\t\t\t\t\t\t\t\t\"sticker\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"can_delete\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"content_type\": \"image\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"url\": \"https://i.ibb.co/crkhKQb/234423.png\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"clickable_zones\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"action_type\": \"link\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"action\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"link\": \"https://vk.com/app7612376\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"tooltip_text_key\": \"tooltip_open_default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"clickable_area\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 206,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 206,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 94\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": 94\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t, {\n\t\t\t\t\t\t\ttitle: 'Опубликовать на стене',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'default',\n\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\tscore > 0 ? (\n\t\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowWallPostBox\", { \"message\": 'У меня отгадано ' + `${score}` + ' км в игре [https://vk.com/app7612376|Towner], попробуй обойти меня!' })\n\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppShowWallPostBox\", { \"message\": 'Насколько ты хорошо знаешь географию? Проверь свои знания в игре - [https://vk.com/app7612376|Towner]!' })\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t}, {\n\n\t\t\t\t\t\t\ttitle: 'Отправить другу',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'default',\n\t\t\t\t\t\t\taction: () => bridge.send(\"VKWebAppGetFriends\", {})\n\t\t\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppCopyText\", { \"text\": \"Сможешь обойти меня в этой игре - https://vk.com/app7612376?\" });\n\n\t\t\t\t\t\t\t\t\tsetSnackbar(\n\t\t\t\t\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\t\t\t\t\t\tbefore={<Avatar size={24}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tТекст для приглашения друга скопирован!\n      </Snackbar>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\twindow.location.href = `https://vk.me/id${data.users[0].id}`\n\t\t\t\t\t\t\t\t\t\twindow.open(`https://vk.me/id${data.users[0].id}`);\n\t\t\t\t\t\t\t\t\t}, 1000);\n\n\n\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}\n\t\t\t\t\t\t, {\n\t\t\t\t\t\t\ttitle: 'Отмена',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\tmode: 'cancel'\n\t\t\t\t\t\t}]}\n\t\t\t\t\tonClose={() => closePopout()}\n\t\t\t\t>\n\t\t\t\t\t<h2>Выберите</h2>\n\n\t\t\t\t</Alert>)\n\t\t\t}\n\n\t\t})\n\t\t\n\n\t}\n\n\tconst closePopout = () => {\n\t\tsetAlert(false)\n\t\tsetpopoutStatus(null)\n\t\tsetAlertText('Топ дня')\n\n\t}\n\tconst statusAnimation = (status, text) => {\n\t\tsetAnimation(status)\n\t\tsetTextButton(text)\n\t}\n\n\tconst [textButton, setTextButton] = useState('Отключить анимацию')\n\tconst [animation, setAnimation] = useState(true)\n\tconst [animationButIcon, setAnimationButIcon] = useState(<Icon28CancelOutline />)\n\tconst offAnimationGlobal = () => {\n\n\t\tif (animation === true) {\n\t\t\tsetAnimation(false)\n\t\t\tsetAnimationButIcon(<Icon28DoneOutline />)\n\n\t\t\tsetTextButton('Включить анимацию')\n\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"animation\", \"value\": 'true' });\n\t\t}\n\t\tif (animation === false) {\n\t\t\tsetAnimation(true)\n\t\t\tsetAnimationButIcon(<Icon28CancelOutline />)\n\n\t\t\tsetTextButton('Отключить анимацию')\n\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"animation\", \"value\": 'false' });\n\t\t}\n\t}\n\treturn (\n\n\t\t<ConfigProvider isWebView={true} scheme={scheme}>\n\t\t\t<View popout={popoutStatus}\n\t\t\t\tactivePanel={activePanel}\n\t\t\t\thistory={history}\n\t\t\t\tonSwipeBack={goBack}\n\t\t\t>\n\t\t\t\t<Loader id=\"Loader\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToHome={goToHome}\n\t\t\t\t\tgoToIntro={goToIntro}\n\t\t\t\t\tgoToError={goToError}\n\t\t\t\t\tstatusAnimation={statusAnimation}\n\t\t\t\t/>\n\t\t\t\t<Intro id=\"Intro\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tgoToHome={goToHome}\n\t\t\t\t/>\n\t\t\t\t<Home id=\"Home\"\n\t\t\t\t\tanimation={animation}\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tchooseLevel={chooseLevel}\n\t\t\t\t\tchangeLevel={changeLevel}\n\n\n\t\t\t\t/>\n\t\t\t\t<Play\n\t\t\t\t\tanimation={animation}\n\t\t\t\t\tid=\"Play\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tleft={left}\n\t\t\t\t\tright={right}\n\t\t\t\t\ttitle={title}\n\n\t\t\t\t/>\n\t\t\t\t<Settings\n\t\t\t\t\tid=\"Settings\"\n\t\t\t\t\ttextButton={textButton}\n\t\t\t\t\tanimation={animation}\n\t\t\t\t\tanimationButIcon={animationButIcon}\n\t\t\t\t\toffAnimationGlobal={offAnimationGlobal}\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tsavePositionGlobal={savePositionGlobal}\n\t\t\t\t\tchangeLevel={changeLevel}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tchooseLevel={chooseLevel}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tgoToLoader={goToLoader}\n\t\t\t\t/>\n\t\t\t\t<Rating\n\t\t\t\tsnackbar={snackbar}\n\t\t\t\t\talertText={alertText}\n\t\t\t\t\talert={alert}\n\t\t\t\t\tanimation={animation}\n\t\t\t\t\tid=\"Rating\"\n\t\t\t\t\tclosePopout={closePopout}\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToLoader={goToLoader}\n\t\t\t\t\tshareResult={shareResult}\n\t\t\t\t/>\n\t\t\t\t<Info\n\t\t\t\t\tanimation={animation}\n\t\t\t\t\tid=\"Info\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t/>\n\t\t\t\t<Warning\n\t\t\t\t\tid=\"Warning\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tsavePositionGlobal={savePositionGlobal}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tgoToError={goToError}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ConfigProvider>\n\n\n\t);\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/arrow.7aac8323.svg\";","module.exports = __webpack_public_path__ + \"static/media/AvatarApp.d3a08012.png\";"],"sourceRoot":""}